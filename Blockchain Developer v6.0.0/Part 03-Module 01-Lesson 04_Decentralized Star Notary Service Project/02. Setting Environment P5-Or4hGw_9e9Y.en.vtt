WEBVTT
Kind: captions
Language: en

00:00:00.830 --> 00:00:04.440
This Starter code has already implemented

00:00:04.440 --> 00:00:07.620
the functionalities you implemented in the StarNotary version

00:00:07.620 --> 00:00:14.235
two exercise and have comments in all the files you need to implement your task.

00:00:14.235 --> 00:00:19.290
You will need to have the latest version of Truffle version five and

00:00:19.290 --> 00:00:25.240
the latest version of Metamask Chrome extension installed.

00:00:25.460 --> 00:00:30.815
I'm going to show you how to start with your BoilerPlate code.

00:00:30.815 --> 00:00:35.350
The first thing, you need to download the Starter code.

00:00:40.490 --> 00:00:44.040
When you have already the file,

00:00:44.040 --> 00:00:46.540
you'll save the file.

00:00:51.290 --> 00:00:56.810
Perfect. The first thing that we need to

00:00:56.810 --> 00:01:02.830
do is also verify that we have the right Truffle version installed.

00:01:02.830 --> 00:01:14.140
To do that, open your terminal and run the command; truffle -version.

00:01:18.020 --> 00:01:24.020
If you see, I have installed Truffle version 5.0.2.

00:01:24.020 --> 00:01:29.815
That's correct. You can close the terminal.

00:01:29.815 --> 00:01:38.140
I am going to open the folder for the Starter code that I've already downloaded.

00:01:40.440 --> 00:01:47.000
We have all the files here that we need to use in our project.

00:01:48.000 --> 00:01:59.860
The first thing that we need to do is run the command, truffle develop.

00:02:12.320 --> 00:02:23.650
So, I have truffle develop started in the 127.0.0.1 in the port 9545.

00:02:24.200 --> 00:02:29.140
If you see, in the truffle config file,

00:02:33.080 --> 00:02:36.160
in the network section,

00:02:36.160 --> 00:02:39.080
I have the development network configured to

00:02:39.080 --> 00:02:44.730
the same port that I have in my truffle console.

00:02:44.870 --> 00:02:47.380
Once we have that,

00:02:47.380 --> 00:02:55.410
we need to import at least two accounts from this list of accounts into my Metamask.

00:02:55.410 --> 00:02:59.890
How do I do that? Let's go to Metamask.

00:03:00.560 --> 00:03:03.460
Go in to Log In,

00:03:11.390 --> 00:03:14.740
and go in to Settings.

00:03:15.770 --> 00:03:19.215
In the newer PC URL,

00:03:19.215 --> 00:03:29.070
I'm going to import the same address that I have for my truffle console.

00:03:31.130 --> 00:03:35.755
So, now I am in my private network.

00:03:35.755 --> 00:03:40.650
Now I need to import at least two accounts.

00:03:40.650 --> 00:03:44.740
Import accounts using the private key.

00:03:45.620 --> 00:03:48.795
If I use my first private key,

00:03:48.795 --> 00:03:52.240
it correspond to the first account.

00:03:53.530 --> 00:03:58.590
I'm going to paste my private key and import it.

00:04:00.140 --> 00:04:11.950
Also, I'm going to import another account that correspond to the second account.

00:04:14.330 --> 00:04:18.105
Import, and I have my other account.

00:04:18.105 --> 00:04:23.880
So, I have two accounts connected to my private network.

00:04:23.960 --> 00:04:26.945
I always recommend to use

00:04:26.945 --> 00:04:34.560
the settings option and

00:04:34.560 --> 00:04:43.890
reset account to make sure that everything is going to work fine for both accounts.

00:04:56.330 --> 00:05:02.440
Perfect. I have Metamask already configured.

00:05:02.780 --> 00:05:05.445
Going back to our project,

00:05:05.445 --> 00:05:09.490
we need to run the first command that is compile.

00:05:13.070 --> 00:05:21.450
If you see, everything compiles correctly because I already have installed openzeppelin,

00:05:22.010 --> 00:05:26.050
and those warnings are for the functions you

00:05:26.050 --> 00:05:30.485
need to implement that aren't already implemented.

00:05:30.485 --> 00:05:33.495
Now that I compiled my contract,

00:05:33.495 --> 00:05:39.040
I need to run migrate --reset.

00:05:41.460 --> 00:05:44.815
Perfect. Everything is deployed.

00:05:44.815 --> 00:05:46.720
My contract is deployed.

00:05:46.720 --> 00:05:54.865
So, I am ready to start with the frontend application.

00:05:54.865 --> 00:06:01.910
Open a new terminal and cd into the app folder.

00:06:02.640 --> 00:06:09.830
From the Command npm run dev.

00:06:10.790 --> 00:06:14.770
This initialize the webpack-dev-server.

00:06:25.850 --> 00:06:29.020
Now it is ready.

00:06:29.090 --> 00:06:36.780
We can open in a browser and I have my application here.

00:06:38.330 --> 00:06:42.480
Going back to the folders in my Started code,

00:06:42.480 --> 00:06:44.770
I have my contract.

00:06:51.050 --> 00:06:56.895
The first thing that I need to implement is for the Task one,

00:06:56.895 --> 00:07:00.280
add a name and a symbol property.

00:07:01.340 --> 00:07:03.545
If you go down,

00:07:03.545 --> 00:07:08.170
you can see the other functionalities that you need to implement and

00:07:08.170 --> 00:07:13.625
the comments of what you need to do in the contract.

00:07:13.625 --> 00:07:16.625
Also, in the test folder,

00:07:16.625 --> 00:07:22.800
you can have the test already implemented in the exercise number two,

00:07:22.800 --> 00:07:25.270
the version number two of the StarNotary that

00:07:25.270 --> 00:07:29.870
you did in lesson number three creating that,

00:07:29.870 --> 00:07:36.360
and also the other three test that you need to implement.

00:07:38.890 --> 00:07:47.205
In the frontend, you already have the index.html and the index.js file.

00:07:47.205 --> 00:07:54.870
An example of one of the functionality that you need to implement in the frontend.

00:07:56.470 --> 00:08:02.855
Perfect. Because the Create a Star already was implemented

00:08:02.855 --> 00:08:08.645
in the StarNotary version two that you did in the previous lesson,

00:08:08.645 --> 00:08:13.290
we can test if everything works fine.

00:08:18.130 --> 00:08:24.060
I'm going to open the developer tools to make sure that nothing happen.

00:08:26.170 --> 00:08:35.560
I hit on Create a Start and it open Metamask to confirm the transaction,

00:08:35.780 --> 00:08:39.850
and everything works fine.

00:08:40.490 --> 00:08:43.095
So, in this way,

00:08:43.095 --> 00:08:46.490
you get started with a BoilerPlate code

00:08:46.490 --> 00:08:52.200
to implement the functionality that you need for project file.

