WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.219
So what we want to do now is handle the callback portion where

00:00:05.219 --> 00:00:10.949
the Oracle has been given the task of fetching the flight status,

00:00:10.949 --> 00:00:16.410
and now it has to obtain that information and submit it back to

00:00:16.410 --> 00:00:19.649
the smart contract which then has to aggregate the information and

00:00:19.649 --> 00:00:23.174
make a decision about what to do with that.

00:00:23.175 --> 00:00:26.160
Now in the case here,

00:00:26.160 --> 00:00:33.405
what we are going to do is do a simple count of all the values that are coming in.

00:00:33.405 --> 00:00:36.810
Once any value, whatever that might be,

00:00:36.810 --> 00:00:40.520
crosses the threshold that we have set for minimum number of responses,

00:00:40.520 --> 00:00:43.005
which if you recollect was three,

00:00:43.005 --> 00:00:45.265
then that is considered a valid value.

00:00:45.265 --> 00:00:50.164
Now, there might be many things wrong with that in that from a logical perspective.

00:00:50.164 --> 00:00:53.240
You may want to validate that information, etc.

00:00:53.240 --> 00:00:55.190
But for the purpose of this exercise,

00:00:55.189 --> 00:00:59.149
we are going to keep it simple and say when the information comes back,

00:00:59.149 --> 00:01:04.010
we just take the majority and say that's the one that's good and go with that.

00:01:04.010 --> 00:01:09.740
So what you're going to do is in the submitOracleresponse function,

00:01:09.739 --> 00:01:11.614
which we'll take a look at momentarily,

00:01:11.614 --> 00:01:15.199
you're going to add code to prevent further Oracle responses from

00:01:15.200 --> 00:01:19.010
being recorded using the isOpen a property.

00:01:19.010 --> 00:01:20.840
Once the threshold is reached,

00:01:20.840 --> 00:01:23.630
you want to announce to listening applications that are

00:01:23.629 --> 00:01:26.329
response to a request has been received,

00:01:26.329 --> 00:01:29.034
and is available, and has been verified.

00:01:29.034 --> 00:01:32.329
You also want to announce to listening applications while

00:01:32.329 --> 00:01:38.659
individual Oracle responses are coming in even if they have not been verified.

00:01:38.659 --> 00:01:39.890
So that's right here.

00:01:39.890 --> 00:01:43.189
Now, the first thing that this particular function

00:01:43.189 --> 00:01:46.745
is doing is it's checking to make sure that

00:01:46.745 --> 00:01:54.590
the Oracle that's calling in has the index that is part of this task.

00:01:54.590 --> 00:01:56.659
So if it does not,

00:01:56.659 --> 00:01:59.554
then it's going to be rejected.

00:01:59.555 --> 00:02:04.700
The idea here is if you are not a valid candidate for doing this task,

00:02:04.700 --> 00:02:07.939
no further processing is needed.

00:02:07.939 --> 00:02:16.680
So here, you'll want to require that the request is still open,

00:02:16.680 --> 00:02:22.969
you'll want to generate a key that will be used, and then finally,

00:02:22.969 --> 00:02:27.319
you want to go ahead and update the code to

00:02:27.319 --> 00:02:34.650
emit the event about the five status being available

