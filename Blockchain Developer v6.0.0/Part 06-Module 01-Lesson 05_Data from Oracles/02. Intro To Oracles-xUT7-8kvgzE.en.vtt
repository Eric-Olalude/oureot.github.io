WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.395
Let's start at the beginning.

00:00:01.395 --> 00:00:02.910
What are Oracles?

00:00:02.910 --> 00:00:08.625
So Oracles are gateways used by smart contracts to interact with the outside world.

00:00:08.625 --> 00:00:12.419
As you may know, smart contracts run on the blockchain

00:00:12.419 --> 00:00:16.019
and don't have access to anything that is outside the blockchain.

00:00:16.019 --> 00:00:19.570
They need a mechanism by which they can fetch data from the outside world,

00:00:19.570 --> 00:00:23.655
whether that is the price of stock if it's something like that,

00:00:23.655 --> 00:00:27.015
or perhaps the shipping information,

00:00:27.015 --> 00:00:29.219
anything that your smart contract needs.

00:00:29.219 --> 00:00:32.219
Any data that is otherwise not available on

00:00:32.219 --> 00:00:36.049
the blockchain has to be acquired by way of some mechanism,

00:00:36.049 --> 00:00:39.274
and that mechanism is a gateway called an Oracle.

00:00:39.274 --> 00:00:43.699
The basic architecture of an Oracle is that

00:00:43.700 --> 00:00:47.785
you have your smart contract and you have the Oracle,

00:00:47.784 --> 00:00:49.909
one or more Oracles as the case may be

00:00:49.909 --> 00:00:52.819
depending on the specific scenario you're looking at,

00:00:52.820 --> 00:00:58.715
and your smart contract triggers a request for the Oracle.

00:00:58.715 --> 00:01:02.250
The Oracle then parses that request,

00:01:02.250 --> 00:01:03.520
understands what it is,

00:01:03.520 --> 00:01:10.130
fetches the data as appropriate from an API that it might have access to.

00:01:10.129 --> 00:01:15.189
It then packages the data in this specific way as required by your smart contract,

00:01:15.189 --> 00:01:19.745
and then submits it back to the smart contract as a transaction.

00:01:19.745 --> 00:01:22.234
That's a very high level overview.

00:01:22.234 --> 00:01:24.394
We'll be going deep into

00:01:24.394 --> 00:01:29.179
this exact process today and you'll be able to understand that much better.

00:01:29.180 --> 00:01:32.705
Let's look at a few examples of Oracles.

00:01:32.704 --> 00:01:35.090
The first one is flight insurance.

00:01:35.090 --> 00:01:39.755
In fact that one is is relevant to this project because the project we are going to

00:01:39.754 --> 00:01:44.869
be doing is called flight surety which we'll talk about in the next couple of lessons.

00:01:44.870 --> 00:01:48.545
The idea here is that passengers could potentially

00:01:48.545 --> 00:01:52.775
purchase insurance and if their flight is delayed or canceled,

00:01:52.775 --> 00:01:55.820
then they're automatically paid instead of having to go through

00:01:55.819 --> 00:02:00.709
customer service and some process that involves filling forms and such.

00:02:00.709 --> 00:02:03.214
Oracles are also used in shipping.

00:02:03.215 --> 00:02:06.920
One of the key things that is required in shipping

00:02:06.920 --> 00:02:10.835
is tracing of packages which can be done via GPS.

00:02:10.835 --> 00:02:15.230
But the problem is that GPS with most devices can be spoofed.

00:02:15.229 --> 00:02:21.215
So a secure Oracle that can provide your smart contract with guaranteed assurance

00:02:21.215 --> 00:02:23.900
of location would be a good thing and

00:02:23.900 --> 00:02:28.069
would help ensure the integrity of the data that's on there.

00:02:28.069 --> 00:02:31.384
Another example is finance.

00:02:31.384 --> 00:02:36.569
You might have a smart contract that relies on fetching the current price of ethereum.

00:02:36.569 --> 00:02:42.245
You might also have the need to transact and convert from

00:02:42.245 --> 00:02:44.840
cryptocurrencies to fiat currencies in which case you would

00:02:44.840 --> 00:02:47.735
need to know what the current exchange rate is.

00:02:47.735 --> 00:02:49.585
So in all those scenarios,

00:02:49.585 --> 00:02:53.435
your smart contract does not have the ability to fetch the data

00:02:53.435 --> 00:02:58.170
itself and it needs and relies on an Oracle to do so.

00:06:04.970 --> 00:06:08.360
Now while we're on the topic of examples of Oracles and

00:06:08.360 --> 00:06:11.509
talking about some of these real-world scenarios,

00:06:11.509 --> 00:06:13.849
you'll want to know that there is

00:06:13.850 --> 00:06:17.795
an emerging class of companies called Oracles-as-a-service.

00:06:17.795 --> 00:06:21.125
Although we won't talk about them in more detail today,

00:06:21.125 --> 00:06:23.975
this is a very nascent industry.

00:06:23.975 --> 00:06:27.320
The purpose of these businesses is to provide

00:06:27.319 --> 00:06:30.019
an out-of-the-box solution that has handled most of

00:06:30.019 --> 00:06:33.109
the technical challenges related to Oracles.

00:06:33.110 --> 00:06:35.840
So I would encourage after this lesson is

00:06:35.839 --> 00:06:38.839
done for you to look up and study up on some of those.

00:06:38.839 --> 00:06:41.209
The reason that we don't cover them here is

00:06:41.209 --> 00:06:45.199
because they're so fluid and there is no clear market leader.

00:06:45.199 --> 00:06:48.050
So it would not behoove us to talk in detail

00:06:48.050 --> 00:06:52.310
about a company or a technology that might not be around tomorrow,

00:06:52.310 --> 00:06:55.459
but there's a lot of exciting technology being developed and

00:06:55.459 --> 00:06:59.739
it would be a great idea for you to look it up.

