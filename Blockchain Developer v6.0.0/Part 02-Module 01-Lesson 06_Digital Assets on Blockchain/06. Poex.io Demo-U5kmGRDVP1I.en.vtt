WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.089
In this video, we'll demonstrate how proof of

00:00:03.089 --> 00:00:06.869
existence works in practice to help you verify digital assets.

00:00:06.870 --> 00:00:08.515
To help demonstrate this,

00:00:08.515 --> 00:00:10.804
we'll use a service that goes by the same name,

00:00:10.804 --> 00:00:13.869
Proof of Existence, also known as POEX.

00:00:13.869 --> 00:00:18.239
This online notarization service is built on the Bitcoin blockchain.

00:00:18.239 --> 00:00:19.984
If we navigate to this site,

00:00:19.984 --> 00:00:21.675
there's a link to a demonstration.

00:00:21.675 --> 00:00:24.350
Let's check it out to see how the process works.

00:00:24.350 --> 00:00:28.359
The first step is to submit the digital asset you want notarized.

00:00:28.359 --> 00:00:30.050
Once you do, POEX creates

00:00:30.050 --> 00:00:33.549
a unique identifier linked to the time which the document was submitted.

00:00:33.549 --> 00:00:36.954
The digital asset is hashed using sha256.

00:00:36.954 --> 00:00:41.339
The next step is that in order for this unique identifier to be recorded,

00:00:41.340 --> 00:00:43.895
POEX needs to create a new transaction.

00:00:43.895 --> 00:00:45.965
Step three is validation.

00:00:45.965 --> 00:00:47.900
Once the transaction is created,

00:00:47.899 --> 00:00:51.219
the unique identifier that was created is stored in the blockchain.

00:00:51.219 --> 00:00:53.719
Even if this site no longer exists,

00:00:53.719 --> 00:00:55.820
evidence of the document will always be there

00:00:55.820 --> 00:00:58.774
and it could be found from a Bitcoin blockchain explorer.

00:00:58.774 --> 00:01:02.310
Let's take a look at these confirmed document digests.

00:01:02.310 --> 00:01:09.025
How about this one here? This is the sha256 generated from the digital asset.

00:01:09.025 --> 00:01:14.620
Remember this number. We're navigated to this page with the transaction ID info.

00:01:14.620 --> 00:01:20.170
Grab the transaction ID and take a look at it in the blockchain info block explorer.

00:01:20.170 --> 00:01:22.730
Next, check out the output scripts.

00:01:22.730 --> 00:01:24.905
Notice the return opcode.

00:01:24.905 --> 00:01:27.519
To mark this transaction as unspendable,

00:01:27.519 --> 00:01:30.359
POEX marks the OP_RETURN operation code.

00:01:30.359 --> 00:01:34.825
Also, it appended a unique identifier in front of your documents hash.

00:01:34.825 --> 00:01:39.015
This unique identifier converts the phrase DOCPROOF into ASCII.

00:01:39.015 --> 00:01:40.915
To search for verified documents,

00:01:40.915 --> 00:01:43.585
we can use OP_RETURN to narrow it down.

00:01:43.584 --> 00:01:46.459
Some online services like Coin Secrets or

00:01:46.459 --> 00:01:51.454
blockchain.infoslist can help you locate OP_RETURN transactions more easily.

00:01:51.454 --> 00:01:56.929
To sum it up, these are the steps this specific service uses to validate digital assets;

00:01:56.930 --> 00:02:00.560
first a digital asset is hashed using sha256.

00:02:00.560 --> 00:02:04.295
Next, that hash is appended to an identifier.

00:02:04.295 --> 00:02:09.360
After that, the hash plus the identifier is put into a generated transaction.

00:02:09.360 --> 00:02:14.035
Finally, the transaction is marked with OP_RETURN so it's unspendable.

00:02:14.034 --> 00:02:17.210
The existence of that transaction in the blockchain proves that

00:02:17.210 --> 00:02:21.530
the document existed at the time the transaction got included into a block.

00:02:21.530 --> 00:02:24.305
So that wraps up this demonstration, hopefully,

00:02:24.305 --> 00:02:28.980
now you have a better idea of how POEX can help you validate digital assets

