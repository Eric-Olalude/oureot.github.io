WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.545
I have divided the discussion into ten topics.

00:00:04.545 --> 00:00:07.935
The first one is Waiting.

00:00:07.935 --> 00:00:13.335
As you know, blockchain brings an interesting paradigm to users.

00:00:13.335 --> 00:00:16.760
In normal web applications or mobile applications,

00:00:16.760 --> 00:00:20.390
they are used to having feedback within a few seconds.

00:00:20.390 --> 00:00:24.260
The game completely changes on the blockchain

00:00:24.260 --> 00:00:28.910
where when a user submits a transaction or takes some action,

00:00:28.910 --> 00:00:34.400
there is an indeterminate amount of time that passes before they might see a result.

00:00:34.400 --> 00:00:40.470
So one of the challenges as a DAP developer is how do you deal with this.

00:00:40.470 --> 00:00:46.040
How do you make sure that users can continue to not get

00:00:46.040 --> 00:00:52.205
frustrated with your app and get an experience that they can actually enjoy?

00:00:52.205 --> 00:00:54.980
So some of the tips that I find useful

00:00:54.980 --> 00:00:59.070
are you want to show them progress indicators et cetera,

00:00:59.070 --> 00:01:02.030
but those typically in the blockchain world,

00:01:02.030 --> 00:01:04.865
in the DAP world, tend to be infinite progress loaders.

00:01:04.865 --> 00:01:08.390
So while they give the user a sense of something happening,

00:01:08.390 --> 00:01:13.550
they don't really give the user a sense of what to expect and how long the wait will be.

00:01:13.550 --> 00:01:16.070
So the way you mitigate that is to use

00:01:16.070 --> 00:01:19.925
third-party services and APIs that do provide estimates

00:01:19.925 --> 00:01:22.805
for what the transaction time is

00:01:22.805 --> 00:01:27.380
for the time period at which the user is performing the action.

00:01:27.380 --> 00:01:29.420
So its a good idea to regularly pull

00:01:29.420 --> 00:01:33.110
those services and get that estimate so that in the UI,

00:01:33.110 --> 00:01:39.050
you can surface that and give the user some idea of what they can expect the time to be.

00:01:39.050 --> 00:01:44.690
The other thing you want to make sure is that if the time is going to be very long,

00:01:44.690 --> 00:01:49.070
that you have code in place and you have infrastructure in place to

00:01:49.070 --> 00:01:53.945
ensure that the user is notified when the processing occurs.

00:01:53.945 --> 00:01:59.405
This sets the expectation of the user clearly up front and they won't be frustrated.

00:01:59.405 --> 00:02:03.485
So take away is make sure that you communicate to the user

00:02:03.485 --> 00:02:08.600
approximately the time that the transaction is going to take and when it's completed,

00:02:08.600 --> 00:02:13.980
notify them so that they can resume the process that we're working on.

