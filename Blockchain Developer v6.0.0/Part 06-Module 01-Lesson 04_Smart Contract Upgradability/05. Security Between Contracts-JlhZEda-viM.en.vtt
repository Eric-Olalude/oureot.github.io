WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.195
Now let's go on to discuss the security between these contracts.

00:00:06.195 --> 00:00:09.060
We've now created two contracts,

00:00:09.060 --> 00:00:13.525
the data contract is assumed to be the controlling a contract,

00:00:13.525 --> 00:00:16.500
that's where all the data is and that should

00:00:16.500 --> 00:00:20.969
be the one that determines which contracts are allowed to call in.

00:00:20.969 --> 00:00:22.890
If you recollect the diagram from earlier,

00:00:22.890 --> 00:00:26.070
we have the arrow going from the app contract to the data contract.

00:00:26.070 --> 00:00:28.379
Now what we want to do is ensure that

00:00:28.379 --> 00:00:31.009
an arbitrary app contract that just knows

00:00:31.010 --> 00:00:34.219
the interface for our data contract, can't call in.

00:00:34.219 --> 00:00:36.409
So the way we're going to do that,

00:00:36.409 --> 00:00:40.579
is by implementing a very simple pattern of registering and

00:00:40.579 --> 00:00:45.905
or de-registering which contracts are authorized to call in.

00:00:45.905 --> 00:00:51.590
Recollect that when the app contract is deployed to the block chain,

00:00:51.590 --> 00:00:52.970
it will have an address,

00:00:52.969 --> 00:00:54.695
the address to which it was deployed.

00:00:54.695 --> 00:01:01.100
The pattern here calls for us to have the data contract be

00:01:01.100 --> 00:01:08.875
informed of what the address is of the valid authorized app contract that was deployed.

00:01:08.875 --> 00:01:10.454
Once we do that,

00:01:10.454 --> 00:01:12.980
we essentially have this scenario where

00:01:12.980 --> 00:01:16.880
the app contract is aware of where the data contract resides.

00:01:16.879 --> 00:01:21.199
The data contract is unaware of where the app contract resides,

00:01:21.200 --> 00:01:25.460
but it is aware of the address that it's authorized.

00:01:25.459 --> 00:01:28.219
So he doesn't really know that represents the contract,

00:01:28.219 --> 00:01:31.129
it's just a state variable where you've said,

00:01:31.129 --> 00:01:34.069
this is the color that is authorized.

00:01:34.069 --> 00:01:35.659
So that's what we're going to tackle in

00:01:35.659 --> 00:01:41.069
our next exercise is we're going to add some code for handling that scenario.

