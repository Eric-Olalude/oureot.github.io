WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.685
Let's see how we're going to implement this capability.

00:00:02.685 --> 00:00:05.475
The basic solution is actually quite simple.

00:00:05.475 --> 00:00:07.530
It consists of a Boolean variable.

00:00:07.530 --> 00:00:09.795
Let's say it's called operational.

00:00:09.795 --> 00:00:14.610
We then use a function modifier with a require,

00:00:14.610 --> 00:00:16.890
where we reference that particular variable.

00:00:16.890 --> 00:00:19.920
So for example in require is operational our code would

00:00:19.920 --> 00:00:24.180
simply check to see if operational is true or not.

00:00:24.180 --> 00:00:27.480
We do need to provide a mechanism by which,

00:00:27.480 --> 00:00:32.625
the contract owner or an authorized user of the contract can set that variable.

00:00:32.625 --> 00:00:38.535
So for that we will create a function called set operating status and then we

00:00:38.535 --> 00:00:44.975
need to also have the actual functions that change state.

00:00:44.975 --> 00:00:48.290
Now let's go on to an exercise where you

00:00:48.290 --> 00:00:52.360
will add this operational status control to a smart contract.

00:00:52.360 --> 00:00:56.240
The key here is to avoid a very serious bug.

00:00:56.240 --> 00:01:02.105
After we're done with the exercise I'll tell you more about the bug but I'd like to have

00:01:02.105 --> 00:01:08.300
students try to do this exercise and identify for themselves what that potential bug is.

00:01:08.300 --> 00:01:11.450
So what you're going to do is make code changes to

00:01:11.450 --> 00:01:15.965
exercise C6A.sol and a test as required.

00:01:15.965 --> 00:01:20.735
Your objective is to add a control flag Boolean variable.

00:01:20.735 --> 00:01:27.730
You next add a function to enable the contract owner to change the control flag variable.

00:01:27.730 --> 00:01:35.060
You then use the control flag variable in a require function in a function modifier.

00:01:35.060 --> 00:01:38.360
Finally, you go through the contract and review

00:01:38.360 --> 00:01:42.265
all the functions that change state and add the modifier where appropriate.

00:01:42.265 --> 00:01:46.265
Now, it's important to note that you could potentially use

00:01:46.265 --> 00:01:52.130
this ability to pause a contract from a function that reads state,

00:01:52.130 --> 00:01:54.365
but that would not serve any purpose.

00:01:54.365 --> 00:01:58.385
So you should focus on those functions that change state.

00:01:58.385 --> 00:02:01.595
So I'm going to go back to my code environment here.

00:02:01.595 --> 00:02:05.880
So this is the solidity file you're looking at,

00:02:05.880 --> 00:02:11.730
and this is where you want to complete the task that I've outlined for the exercise.

