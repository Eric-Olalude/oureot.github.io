WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.240
Welcome back. Hopefully, you had some time to

00:00:03.240 --> 00:00:05.925
explore the quickstart and a few other commands.

00:00:05.924 --> 00:00:09.074
Now that you're more comfortable with the basics of IPFS,

00:00:09.074 --> 00:00:11.564
we can start working with files on the network.

00:00:11.564 --> 00:00:15.119
In this video, we'll focus on text files and explore some of

00:00:15.119 --> 00:00:17.099
the core ideas that will remain true no

00:00:17.100 --> 00:00:19.620
matter which type of files you end up working with.

00:00:19.620 --> 00:00:23.355
These next few commands don't have to do with IPFS at all.

00:00:23.355 --> 00:00:26.219
We'll just be getting some files on our local computer.

00:00:26.219 --> 00:00:29.359
To start, make a directory called whatever you like.

00:00:29.359 --> 00:00:31.144
I'll call it IPFS.

00:00:31.144 --> 00:00:33.439
Now, change into that directory.

00:00:33.439 --> 00:00:35.299
Next, if we list the files,

00:00:35.299 --> 00:00:37.699
we can see we just have an empty folder.

00:00:37.700 --> 00:00:40.505
Make a simple text file in this directory.

00:00:40.505 --> 00:00:43.775
I'll do that by typing echo ''Hello IPFS'',

00:00:43.774 --> 00:00:46.009
which will be the content of the file,

00:00:46.009 --> 00:00:50.479
and then pipe that into a command named hello-ipfs.text.

00:00:50.479 --> 00:00:55.224
You can also just make a simple text file and save it into this folder if you prefer.

00:00:55.225 --> 00:00:56.980
Also, if you're on Windows,

00:00:56.979 --> 00:01:00.244
you can use type instead of echo. All right.

00:01:00.244 --> 00:01:01.835
So now, if we list the files,

00:01:01.835 --> 00:01:04.234
we can see we have our new text file.

00:01:04.234 --> 00:01:08.760
To see the contents of this file, type cat hello-ipfs.text.

00:01:08.840 --> 00:01:12.030
Still none of this has to do with IPFS,

00:01:12.030 --> 00:01:14.465
it's just helpful to get familiar with the files

00:01:14.465 --> 00:01:17.180
using the command line to work with IPFS.

00:01:17.180 --> 00:01:20.615
To actually add something to IPFS, is pretty simple.

00:01:20.614 --> 00:01:25.519
To do that, type IPFS add followed by the name of your file.

00:01:25.519 --> 00:01:27.109
All right, that's it.

00:01:27.109 --> 00:01:30.484
You just uploaded your first file to IPFS.

00:01:30.484 --> 00:01:34.250
What you get back is the hash value of the file you uploaded.

00:01:34.250 --> 00:01:39.575
Every unique piece of content in IPFS has a unique hash value like this.

00:01:39.575 --> 00:01:42.650
This will help you search for the content later on,

00:01:42.650 --> 00:01:44.825
which we can actually do right now.

00:01:44.825 --> 00:01:46.814
To get this content back,

00:01:46.814 --> 00:01:48.939
type in IPFS cat,

00:01:48.939 --> 00:01:51.859
then paste in the hash value that was returned.

00:01:51.859 --> 00:01:53.659
What you'll see is that it's still

00:01:53.659 --> 00:01:56.329
the same file as when you've read it from your computer.

00:01:56.329 --> 00:01:59.164
The difference now is that it's from IPFS.

00:01:59.165 --> 00:02:02.900
You could delete your local file and this would still be there.

00:02:02.900 --> 00:02:05.390
Okay. So, let's try something with this file.

00:02:05.390 --> 00:02:07.625
We'll run through what we just did one more time,

00:02:07.625 --> 00:02:09.455
and I'll show you why in a second.

00:02:09.455 --> 00:02:12.860
Update the file with some new text, anything you like.

00:02:12.860 --> 00:02:15.500
I'll do that by typing, ''Hello ipfs.

00:02:15.500 --> 00:02:19.639
Here's more text'' and pipe that to hello-ipfs.txt.

00:02:20.050 --> 00:02:24.620
This will update the file you made with some new content.

00:02:24.620 --> 00:02:30.905
I'll check it out again using cat hello-ipfs.text to make sure it was updated.

00:02:30.905 --> 00:02:37.580
Now, add this same file to IPFS using IPFS add hello-ipfs.text.

00:02:37.580 --> 00:02:41.405
What you get back is the hash value for this file.

00:02:41.405 --> 00:02:43.564
We did this because, check it out,

00:02:43.564 --> 00:02:45.530
even though the file is the same,

00:02:45.530 --> 00:02:47.134
the hash value is new.

00:02:47.134 --> 00:02:52.679
That's because IPFS uses content-based addressing rather than location-based addressing,

00:02:52.680 --> 00:02:54.319
like we went over earlier.

00:02:54.319 --> 00:02:58.489
Just like how each block on a Blockchain has a specific hash value,

00:02:58.490 --> 00:03:02.540
each unique file in IPFS also has a specific hash value.

00:03:02.539 --> 00:03:04.984
You can't look up the files by their location.

00:03:04.985 --> 00:03:07.240
It has to be done using this hash.

00:03:07.240 --> 00:03:10.879
This is pretty easy to see just by looking at these hashes here,

00:03:10.879 --> 00:03:15.724
but it actually isn't enormous difference between IPFS and something like HTTP.

00:03:15.724 --> 00:03:17.604
Here's an example of why.

00:03:17.604 --> 00:03:19.229
To show you, first,

00:03:19.229 --> 00:03:22.699
it's time to show you something known as the IPFS gateway.

00:03:22.699 --> 00:03:25.519
This is where everything you load onto the network can be

00:03:25.520 --> 00:03:28.430
found using its publicly visible URL.

00:03:28.430 --> 00:03:30.030
To see your text file,

00:03:30.030 --> 00:03:35.634
open a browser and type gateway.ipfs.io/ipfs,

00:03:35.634 --> 00:03:39.364
then follow that by the hash value you got for your file.

00:03:39.365 --> 00:03:44.240
What you're seeing here is the file uploaded to a URL you can share with anyone.

00:03:44.240 --> 00:03:46.070
This is a really cool idea to me.

00:03:46.069 --> 00:03:49.310
This link right now can already be shared with anyone,

00:03:49.310 --> 00:03:51.110
and nobody can ban, delete,

00:03:51.110 --> 00:03:53.255
hide or remove it in any way.

00:03:53.254 --> 00:03:56.329
But here's where that content-based addressing comes in.

00:03:56.330 --> 00:03:58.895
I'll open my file and make one more change.

00:03:58.895 --> 00:04:01.100
I'll say, Hello world, it's Joe.

00:04:01.099 --> 00:04:04.109
I'm on IPFS. Back in my terminal,

00:04:04.110 --> 00:04:05.745
I'll add this to IPFS.

00:04:05.745 --> 00:04:15.664
Then I'll refresh the web browser to see the changes. No changes.

00:04:15.664 --> 00:04:17.779
I can't see the changes because I'm still

00:04:17.779 --> 00:04:20.569
looking at the hash value from the original file.

00:04:20.569 --> 00:04:24.829
It doesn't matter to IPFS that is the same file in the same place,

00:04:24.829 --> 00:04:27.099
it's only looking at the content.

00:04:27.100 --> 00:04:28.890
To see the new content,

00:04:28.889 --> 00:04:32.750
I have to switch out the hash value with the new one it gave to me.

00:04:32.750 --> 00:04:36.839
All right. So, I do that and I see the new file.

00:04:37.430 --> 00:04:40.069
Great, I can find my file.

00:04:40.069 --> 00:04:43.639
The reason I'm showing you this is that it gives us a pretty interesting problem.

00:04:43.639 --> 00:04:46.879
If the link is going to change every time we upload a new file,

00:04:46.879 --> 00:04:51.125
how could we possibly have a file or website that we can share with everybody?

00:04:51.125 --> 00:04:53.569
Every change would make a new link making it

00:04:53.569 --> 00:04:57.264
impossible for anyone to see the most up-to-date version of the file.

00:04:57.264 --> 00:05:01.175
We'll revisit this idea a little later when we make our first website.

00:05:01.175 --> 00:05:05.449
For now, just think through the problem and see if you can come up with a solution.

00:05:05.449 --> 00:05:07.490
All right. So, that wraps up this video.

00:05:07.490 --> 00:05:09.650
You just learned how to create, add,

00:05:09.649 --> 00:05:12.214
read, and visit text files from the terminal.

00:05:12.214 --> 00:05:17.134
You also now know how to view these files in a browser using the IPFS gateway.

00:05:17.134 --> 00:05:21.110
In the next section, I'll show you how to work with other files like images,

00:05:21.110 --> 00:05:23.884
videos, PDFs, in entire folders.

00:05:23.884 --> 00:05:26.740
There are some small differences depending on what you're trying to do,

00:05:26.740 --> 00:05:30.264
but the core idea is you just learned here will stay exactly the same.

00:05:30.264 --> 00:05:34.129
So, if you'd like,to take some time to play around with these text files,

00:05:34.129 --> 00:05:36.409
think a bit about the URL problem I mentioned,

00:05:36.410 --> 00:05:38.939
and when you're ready, I'll see you in the next section.

