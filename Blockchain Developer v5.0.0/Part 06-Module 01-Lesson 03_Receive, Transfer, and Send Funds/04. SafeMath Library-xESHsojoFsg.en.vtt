WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.884
In this topic, we are going to discuss the SafeMath library,

00:00:03.884 --> 00:00:08.625
a free open source library provided by open Zeppelin.

00:00:08.625 --> 00:00:15.960
This library is very important to ensure the security of your smart contracts.

00:00:15.960 --> 00:00:17.655
Looking at the slide here,

00:00:17.655 --> 00:00:19.950
you will see that we have an odometer.

00:00:19.949 --> 00:00:22.710
As you may be aware, on an odometer,

00:00:22.710 --> 00:00:24.734
when it reaches its maximum,

00:00:24.734 --> 00:00:27.060
it cycles back to zeros.

00:00:27.059 --> 00:00:31.259
That possibility exists in smart contracts also.

00:00:31.260 --> 00:00:36.855
When you have the maximum possible number and you add one to it,

00:00:36.854 --> 00:00:39.449
it cycles back and goes to zero.

00:00:39.450 --> 00:00:42.045
This is called overflow.

00:00:42.045 --> 00:00:45.750
When you subtract from zero,

00:00:45.750 --> 00:00:52.894
the number one, you end up with the maximum number possible and this is called underflow.

00:00:52.895 --> 00:00:56.600
We want to ensure that in your contract code,

00:00:56.600 --> 00:00:59.855
you never have a situation where this occurs.

00:00:59.854 --> 00:01:04.250
It is possible to cause immense financial loss if for

00:01:04.250 --> 00:01:09.724
example you had a zero balance and you do some function,

00:01:09.724 --> 00:01:11.869
there was a number subtracted from it,

00:01:11.870 --> 00:01:15.035
and that resulted in all your contract funds being drained.

00:01:15.034 --> 00:01:22.239
So what SafeMath does is allow you to use instead of the plus, minus,

00:01:22.239 --> 00:01:26.729
multiplication and divide operators that are built-in into solidity,

00:01:26.730 --> 00:01:29.025
it provides methods; add,

00:01:29.025 --> 00:01:32.150
sub, mul, and div.

00:01:32.150 --> 00:01:38.180
If you use these any time you need to use the corresponding math operator,

00:01:38.180 --> 00:01:42.365
the SafeMath library ensures that things proceed

00:01:42.364 --> 00:01:46.489
without the risk of underflow or overflow.

00:01:46.489 --> 00:01:52.324
In general, I recommend that you always use SafeMath Library in all your contracts,

00:01:52.325 --> 00:01:57.079
because there's never a situation where any of these addition, subtraction,

00:01:57.079 --> 00:02:03.739
multiplication and division operations should potentially risk funds in the contract.

00:02:03.739 --> 00:02:06.094
It's better to be safe than to be sorry.

00:02:06.094 --> 00:02:09.150
Let's take our next quiz.

00:02:09.879 --> 00:02:17.340
In what situations should you use SafeMath for contract arithmetic?

