WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.960
All right. Let's review the code for exercise 1,

00:00:03.960 --> 00:00:06.615
and walk through it together.

00:00:06.615 --> 00:00:14.669
So the first thing we want to do is we want to add the app logic portion.

00:00:14.669 --> 00:00:19.240
So that's in the folder C here.

00:00:22.129 --> 00:00:28.079
I'm going to copy that and paste that in here and

00:00:28.079 --> 00:00:34.560
rename it to sol.

00:00:34.560 --> 00:00:37.675
So as I alluded earlier,

00:00:37.674 --> 00:00:41.149
this is a basic stub of a contract,

00:00:41.149 --> 00:00:44.104
it doesn't really have a whole lot in there.

00:00:44.104 --> 00:00:50.179
So the first thing we are going to do is move the logic for calculateBonus

00:00:50.179 --> 00:00:58.000
and addSale from the data contract over to the app contract.

00:01:01.340 --> 00:01:04.170
I'll go ahead and put that here.

00:01:04.170 --> 00:01:10.530
At this point, you can see right away that updateEmployee is not recognized,

00:01:10.530 --> 00:01:13.549
so we need to go ahead and make a stub for it.

00:01:13.549 --> 00:01:17.765
The easiest way to create a stub is to go ahead and

00:01:17.765 --> 00:01:24.269
call a copy from the the data contract and just paste that.

00:01:25.359 --> 00:01:30.245
We'll just make it an empty function.

00:01:30.245 --> 00:01:37.620
So at that point, that should address the compilation error, that was showing up.

00:01:37.620 --> 00:01:41.439
You'll probably note that there are still squiggles there,

00:01:41.439 --> 00:01:44.179
and in fact when I try and compile this,

00:01:44.180 --> 00:01:46.790
you'll see a lot of errors.

00:01:46.790 --> 00:01:53.325
The reason for those errors is that the contract has unused variables,

00:01:53.325 --> 00:01:55.140
it has an unused function,

00:01:55.140 --> 00:02:01.870
it has a function where the visibility of it is not explicitly declared.

00:02:01.870 --> 00:02:04.425
So that's just the compiler warning you,

00:02:04.424 --> 00:02:06.239
but you'll notice that at the end of it,

00:02:06.239 --> 00:02:09.224
it still writes the artifacts to the contract's folder.

00:02:09.224 --> 00:02:15.120
Which means that it wasn't an error that would cause your contract to be broken,

00:02:15.120 --> 00:02:22.504
it just is an issue with having extraneous code and the compiler is warning you of it.

00:02:22.504 --> 00:02:27.500
So as you are refactoring code in these scenarios, you're going to see a lot of this.

00:02:27.500 --> 00:02:32.300
You're going to go through phases where there are a lot of warnings.

00:02:32.300 --> 00:02:36.150
What you're looking for is this last line, writing artifacts,

00:02:36.150 --> 00:02:37.800
because as long as that's happening,

00:02:37.800 --> 00:02:40.594
you know that everything is working correctly.

00:02:40.594 --> 00:02:42.330
Now one tip when you're doing this,

00:02:42.330 --> 00:02:45.440
it might also be beneficial for you to periodically delete

00:02:45.439 --> 00:02:48.784
your build folder because occasionally,

00:02:48.784 --> 00:02:52.685
there are problems where a particular file is not updated.

00:02:52.685 --> 00:02:54.965
So as a safe thing to do,

00:02:54.965 --> 00:02:57.075
just delete it and then compile.

00:02:57.074 --> 00:03:02.734
That way you can be sure that it's the latest generated and compiled code.

00:03:02.735 --> 00:03:05.495
So that has worked.

00:03:05.495 --> 00:03:08.830
So that is exercise 1.

00:03:08.830 --> 00:03:11.675
Now, let's work on a quiz related to that.

00:03:11.675 --> 00:03:16.400
When you're separating a contract into separate data and application contracts,

00:03:16.400 --> 00:03:20.530
what development technique enables you to gradually perform the task,

00:03:20.530 --> 00:03:24.490
while ensuring the code continues to compile?

