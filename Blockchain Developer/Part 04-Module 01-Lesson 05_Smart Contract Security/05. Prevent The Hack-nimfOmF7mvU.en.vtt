WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.009
Welcome back. In this video,

00:00:02.009 --> 00:00:06.134
we'll go over how this could have been prevented by moving just a single line of code.

00:00:06.134 --> 00:00:07.710
If you weren't sure how to do it,

00:00:07.710 --> 00:00:11.594
pause the video quick to look back again now that you know it's only one line,

00:00:11.595 --> 00:00:13.710
that might help you get closer to the answer.

00:00:13.710 --> 00:00:16.769
Otherwise, I'll move on and show you how this is done.

00:00:16.769 --> 00:00:19.030
To prevent the hack for being possible,

00:00:19.030 --> 00:00:23.145
all you need to do is move this line of code up to here.

00:00:23.144 --> 00:00:25.320
That's all there is to it.

00:00:25.320 --> 00:00:29.504
After doing this you set the balance to zero before sending the payout,

00:00:29.504 --> 00:00:33.390
making it impossible to execute the same recursion on this contract,

00:00:33.390 --> 00:00:35.179
well, technically they can still do

00:00:35.179 --> 00:00:38.140
the recursion but they'll just get sent zero ether every time.

00:00:38.140 --> 00:00:40.910
That's the solution to saving $60 million.

00:00:40.909 --> 00:00:44.539
This was a quick video, but what I'm really hoping is that this process helped get

00:00:44.539 --> 00:00:48.170
the idea across of how easily some of these things can be overlooked,

00:00:48.170 --> 00:00:52.460
how much trouble it can cause and how easy it is to fix once you know what to look for.

00:00:52.460 --> 00:00:55.009
There's a few patterns like this and we won't be going

00:00:55.009 --> 00:00:57.679
through each of them in this much detail but we will go through

00:00:57.679 --> 00:01:00.229
some of the research to find out how you can continue to stay

00:01:00.229 --> 00:01:03.304
on top of the most recent vulnerabilities that have been found.

00:01:03.304 --> 00:01:06.590
This will make you a much more valuable developer as you learn to avoid

00:01:06.590 --> 00:01:09.850
making simple mistakes that can save your project from getting exploited.

