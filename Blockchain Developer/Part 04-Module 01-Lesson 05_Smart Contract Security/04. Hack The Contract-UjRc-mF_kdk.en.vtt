WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.485
All right. Welcome back.

00:00:01.485 --> 00:00:04.560
Hopefully, you had some time to try out hacking your first contract.

00:00:04.559 --> 00:00:07.139
In this video, we'll write just a few lines of code that

00:00:07.139 --> 00:00:09.719
exploit the weakness we went over from the previous video.

00:00:09.720 --> 00:00:13.830
So, to start, we note two things about the code that we need to write.

00:00:13.830 --> 00:00:18.390
First, we know that we need our payout function to call the withdrawal coins function.

00:00:18.390 --> 00:00:20.379
This is done using recursion,

00:00:20.379 --> 00:00:23.460
and will place the call at the bottom of our payout function.

00:00:23.460 --> 00:00:27.495
Next, we need to set a limit to the number of times the withdrawal can happen.

00:00:27.495 --> 00:00:29.160
We'll do that using a loop.

00:00:29.160 --> 00:00:32.670
For this, let's say we set our variable to 20.

00:00:32.670 --> 00:00:35.960
Then we say, if our variable is greater than zero,

00:00:35.960 --> 00:00:37.369
call the function again.

00:00:37.369 --> 00:00:41.125
That's it. Just a few lines of code for a couple million dollars.

00:00:41.125 --> 00:00:44.750
To see how this works, let's head over to remix to test it for ourselves.

00:00:44.750 --> 00:00:48.859
First, deploy the fundraiser contract using the JavaScript VM.

00:00:48.859 --> 00:00:52.339
Next, deploy the wallet contract the same way.

00:00:52.340 --> 00:00:54.470
The only thing to add here is that you do need to

00:00:54.469 --> 00:00:56.689
grab the deployed address from the fundraiser,

00:00:56.689 --> 00:00:58.099
and then deploy it to that.

00:00:58.100 --> 00:01:01.490
After this, you need to add funds to each of these wallets.

00:01:01.490 --> 00:01:04.054
I'll add 200 wei to the fundraiser,

00:01:04.054 --> 00:01:06.185
and 100 wei to the wallet.

00:01:06.185 --> 00:01:10.799
We can check the balance of each wallet using these functions here.

00:01:16.219 --> 00:01:18.829
Okay. We're all set up.

00:01:18.829 --> 00:01:22.039
Start by contributing five wei from the wallet.

00:01:22.040 --> 00:01:26.705
You can now check the balance for each contract again by clicking get balance.

00:01:26.704 --> 00:01:29.899
Next, click the payout function for the wallet.

00:01:29.900 --> 00:01:32.060
This might take a second but you'll see in

00:01:32.060 --> 00:01:34.405
the terminal when this is successfully executed.

00:01:34.405 --> 00:01:38.599
Once it's done, check the balance one more time on each of these contracts.

00:01:38.599 --> 00:01:40.489
What you'll see is that you just cleared out

00:01:40.489 --> 00:01:44.034
20 times the amount of wei you originally contributed to the wallet.

00:01:44.034 --> 00:01:46.114
Congratulations, you're rich.

00:01:46.114 --> 00:01:48.304
But if you run the payout one more time,

00:01:48.305 --> 00:01:50.090
it doesn't take out anymore wei.

00:01:50.090 --> 00:01:52.460
That's because after the recursion was done,

00:01:52.459 --> 00:01:56.154
the contract successfully reached the line that set your balance to zero.

00:01:56.155 --> 00:01:59.504
So, there you go. We just hacked our first wallet.

00:01:59.504 --> 00:02:02.089
Hopefully, this gives you a better understanding of each step of

00:02:02.090 --> 00:02:10.439
the process from the initial creation of the wallet,

00:02:10.439 --> 00:02:11.775
to finding the weakness,

00:02:11.775 --> 00:02:14.495
and finally how someone would exploit this weakness.

00:02:14.495 --> 00:02:17.060
The last step we'll take is really important to.

00:02:17.060 --> 00:02:19.520
Now that we know whats wrong, how do we fix it?

00:02:19.520 --> 00:02:22.700
I'll take another quick break here to give you some time to think about it.

00:02:22.699 --> 00:02:24.919
When you're ready, I'll see you in the next video where we'll

00:02:24.919 --> 00:02:27.539
go over how to prevent this from happening in the future.

