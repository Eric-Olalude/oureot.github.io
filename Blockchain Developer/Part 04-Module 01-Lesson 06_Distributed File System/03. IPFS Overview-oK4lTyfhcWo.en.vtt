WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.754
At this point, you have some background on the purpose of distributed file systems,

00:00:04.754 --> 00:00:08.070
what they're good for and how they relate to HTTP.

00:00:08.070 --> 00:00:10.259
As we mentioned, there are a couple of

00:00:10.259 --> 00:00:14.085
distributed file systems available like Swarm and IPFS.

00:00:14.085 --> 00:00:16.980
For this lesson, we'll be using IPFS.

00:00:16.980 --> 00:00:18.795
The reason is that right now,

00:00:18.795 --> 00:00:23.280
IPFS is more developed and we feel it's a better tool to get started with.

00:00:23.280 --> 00:00:26.940
IPFS is immediate distribution protocol.

00:00:26.940 --> 00:00:30.130
It's a new and popular implementation of this idea,

00:00:30.129 --> 00:00:32.384
but this idea has existed before.

00:00:32.384 --> 00:00:35.420
If you're familiar with things like BitTorrent or Napster,

00:00:35.420 --> 00:00:38.090
then you might already have a decent idea of what it means

00:00:38.090 --> 00:00:41.195
to be a peer-to-peer decentralized media protocol.

00:00:41.195 --> 00:00:44.240
In these protocols, files are downloaded and shared by

00:00:44.240 --> 00:00:47.645
users on the network and IPFS is no different.

00:00:47.645 --> 00:00:50.150
It allows a set of nodes to upload,

00:00:50.149 --> 00:00:54.034
download and share files with other uses in their network of peers.

00:00:54.034 --> 00:00:59.009
To join the network, you'll need to install and run IPFS on your local computer,

00:00:59.009 --> 00:01:01.219
and that's what we'll be doing in this lesson.

00:01:01.219 --> 00:01:03.560
Once installed, you'll be connected to

00:01:03.560 --> 00:01:06.814
this network and can begin sharing information right away.

00:01:06.814 --> 00:01:08.599
Once you share information,

00:01:08.599 --> 00:01:11.180
it immediately joins the community of files that can't be

00:01:11.180 --> 00:01:14.180
blocked or deleted by any company or government.

00:01:14.180 --> 00:01:17.540
With IPFS, you can share any file you'd like.

00:01:17.540 --> 00:01:21.525
Things like text, images, videos, code, websites,

00:01:21.525 --> 00:01:26.420
and DApps can all be shared and hosted by this network free of any cost to you.

00:01:26.420 --> 00:01:28.579
After we install IPFS,

00:01:28.579 --> 00:01:31.480
we'll work through examples of each of these file types.

00:01:31.480 --> 00:01:33.590
We'll get hands-on and explain many of

00:01:33.590 --> 00:01:36.920
the new concepts as we work with these files for ourselves.

00:01:36.920 --> 00:01:40.070
One new idea that will come up and it's worth explaining

00:01:40.069 --> 00:01:43.504
ahead of time is what's known as content-based addressing.

00:01:43.504 --> 00:01:49.049
Content-based addressing is the idea IPFS uses to store and manage our files,

00:01:49.049 --> 00:01:51.474
and it's completely different from HTTP,

00:01:51.474 --> 00:01:54.079
which uses location-based addressing.

00:01:54.079 --> 00:01:57.739
Location-based addressing is what we're already familiar with.

00:01:57.739 --> 00:02:00.094
Files are referenced by where they are,

00:02:00.094 --> 00:02:02.734
basically which folder can you find it in.

00:02:02.734 --> 00:02:07.159
This idea dominates HTTP and is why our URLs are basically

00:02:07.159 --> 00:02:09.379
just a long list of directory names that

00:02:09.379 --> 00:02:12.159
lead us to the file or site that we're looking for.

00:02:12.159 --> 00:02:15.645
The problem with this is what if the content is moved?

00:02:15.645 --> 00:02:19.355
Well, that causes an error known as the 404 message.

00:02:19.354 --> 00:02:21.634
Nearly everyone has seen this before.

00:02:21.634 --> 00:02:25.250
It's the message you get when location-based addressing fails.

00:02:25.250 --> 00:02:29.120
If content has been removed or even just moved somewhere else,

00:02:29.120 --> 00:02:32.689
we still find ourselves following links that lead us to nowhere.

00:02:32.689 --> 00:02:36.199
This is where content-based addressing is different.

00:02:36.199 --> 00:02:41.284
Content-based addressing takes each unique file and gives it a unique hash value.

00:02:41.284 --> 00:02:44.310
You can think of it just like blocks on a blockchain.

00:02:44.310 --> 00:02:46.805
The content is forever tied to this value.

00:02:46.805 --> 00:02:48.109
It cannot be removed,

00:02:48.109 --> 00:02:50.810
and you can always find it by its hash value.

00:02:50.810 --> 00:02:53.568
This does lead to its own unique challenges,

00:02:53.568 --> 00:02:56.224
which we'll explore while we work with IPFS.

00:02:56.224 --> 00:02:59.419
For now, it's just important to start thinking of this difference

00:02:59.419 --> 00:03:03.129
between location-based addressing and content-based addressing.

00:03:03.129 --> 00:03:07.245
Finally, there are many blockchain tools in the blockchain ecosystem,

00:03:07.245 --> 00:03:09.560
and it helps to quickly see where this fits into

00:03:09.560 --> 00:03:12.740
the path between you and the users of your application.

00:03:12.740 --> 00:03:15.215
Your goal right now is to make an application

00:03:15.215 --> 00:03:17.830
that users can access through their web browsers.

00:03:17.830 --> 00:03:22.430
To do that, you'll use your code editor shown here as Visual Studio code.

00:03:22.430 --> 00:03:24.920
We'll be using the truffle framework to develop,

00:03:24.919 --> 00:03:27.589
test and deploy a theory and applications.

00:03:27.590 --> 00:03:32.930
You can choose to run an Ethereum node locally and optionally use a tool like Infura,

00:03:32.930 --> 00:03:34.790
which allows you to connect and distribute

00:03:34.789 --> 00:03:38.179
the EVM workload across the nodes in the blockchain network.

00:03:38.180 --> 00:03:41.944
Infura will help you distribute computation across the network,

00:03:41.944 --> 00:03:44.555
and this all can be hosted on IPFS,

00:03:44.555 --> 00:03:47.855
which will help you distribute the storage across their network.

00:03:47.854 --> 00:03:52.579
All of this can be accessed on a web browser like Google Chrome using MetaMask.

00:03:52.580 --> 00:03:55.820
You might notice we said IPFS is an alternative to

00:03:55.819 --> 00:03:58.954
Google but here was still using Google Chrome.

00:03:58.955 --> 00:04:01.250
Well, that's true but at this point,

00:04:01.250 --> 00:04:03.770
Chrome and some other browsers are undeniably

00:04:03.770 --> 00:04:07.265
the favorite for how users are going to interact with your application.

00:04:07.264 --> 00:04:11.089
But if you're fully committed to decentralizing even your browser,

00:04:11.090 --> 00:04:13.200
then you might be interested in checking out Brave,

00:04:13.199 --> 00:04:16.115
an alternative decentralized web browser.

00:04:16.115 --> 00:04:18.079
It's not something we'll be covering,

00:04:18.079 --> 00:04:19.564
but it's simple to get started,

00:04:19.564 --> 00:04:22.454
and it's definitely interesting to check out. All right.

00:04:22.454 --> 00:04:25.579
That was a lot of new ideas and as a way out to help give you

00:04:25.579 --> 00:04:29.419
as much perspective as I could to help you get started with IPFS.

00:04:29.420 --> 00:04:34.460
At this point, we're done talking about ideas and we're ready to jump in and get started.

00:04:34.459 --> 00:04:37.620
Coming up, you'll get IPFS installed on your computer,

00:04:37.620 --> 00:04:41.899
get set up with your own node and start sharing files with the network.

