WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.725
In this exercise, we are going to update our test code to start

00:00:04.725 --> 00:00:11.640
referencing the new contract we've created and change the test so that it refers to that.

00:00:11.640 --> 00:00:13.425
Now I must tell you one thing.

00:00:13.425 --> 00:00:17.220
When it comes to testing we are using Grenache

00:00:17.220 --> 00:00:21.375
and truffle and the underlying test framework,

00:00:21.375 --> 00:00:24.090
and one of the things I have observed is

00:00:24.090 --> 00:00:26.940
that as you push the boundaries on certain things,

00:00:26.940 --> 00:00:32.115
especially things like delegate calls making crust contract calls, etc.,

00:00:32.115 --> 00:00:36.570
the testing framework tends to be brittle and almost half

00:00:36.570 --> 00:00:41.175
the time you might get errors that are hard to explain.

00:00:41.175 --> 00:00:46.560
If that happens, what we'll be doing is in the lesson,

00:00:46.560 --> 00:00:49.100
we'll be providing troubleshooting tips and

00:00:49.100 --> 00:00:51.920
guidance on how you can mitigate those situations.

00:00:51.920 --> 00:00:56.420
But you can expect that most of the time when you are testing

00:00:56.420 --> 00:01:01.370
complex scenarios like this that there might inevitably be some errors.

00:01:01.370 --> 00:01:06.050
In fact, one of the things you'll observe is that when you do get those errors,

00:01:06.050 --> 00:01:11.240
the actual error after you've resolved it could have been completely unrelated to

00:01:11.240 --> 00:01:14.330
the actual problem in the code or

00:01:14.330 --> 00:01:18.680
perhaps the instance of Grenache that was running had to be reset, etc.

00:01:18.680 --> 00:01:21.790
So sometimes the error messages tend to be a little spurious.

00:01:21.790 --> 00:01:23.595
So to be aware of that.

00:01:23.595 --> 00:01:26.910
Having said that now, let's look at the outline for exercise 4.

00:01:26.910 --> 00:01:30.380
What we're going to do is modify our test config which is

00:01:30.380 --> 00:01:35.045
where the code for testing the environment is set up.

00:01:35.045 --> 00:01:40.320
We are going to add the artifact for the app. smart contract.

00:01:40.320 --> 00:01:43.160
We're going to create a new instance and we're going to pass it along with

00:01:43.160 --> 00:01:46.310
our config variable so that our test can consume it,

00:01:46.310 --> 00:01:48.575
and the test change is actually quite simple.

00:01:48.575 --> 00:01:51.620
We are going to change the reference for

00:01:51.620 --> 00:01:59.260
the addSale function from the data contract to the app contract.

