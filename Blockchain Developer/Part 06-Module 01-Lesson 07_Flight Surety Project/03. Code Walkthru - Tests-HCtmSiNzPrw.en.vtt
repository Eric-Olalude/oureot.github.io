WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.794
A quick look at the tests that are set up.

00:00:03.794 --> 00:00:05.639
There are two files.

00:00:05.639 --> 00:00:11.830
One is, one exercises most of the code related to multiparty things.

00:00:11.830 --> 00:00:15.960
Again, this might not work very well if you decide on

00:00:15.960 --> 00:00:20.910
a certain approach that is different from what's already sort of scaffolded,

00:00:20.910 --> 00:00:22.094
which is perfectly fine,

00:00:22.094 --> 00:00:23.519
you're welcome to do that.

00:00:23.519 --> 00:00:28.769
But if you do use the scaffolding then you can take advantage of some of these tests.

00:00:28.769 --> 00:00:30.344
These tests are not complete.

00:00:30.344 --> 00:00:37.475
They're intended for you to help guide you in creating more in-depth tests.

00:00:37.475 --> 00:00:41.539
The oracles tests is what we used in

00:00:41.539 --> 00:00:46.445
the prior lesson to generate a large number of oracles and use them.

00:00:46.445 --> 00:00:51.560
Now, this will be useful while you are working on the smart contract,

00:00:51.560 --> 00:00:54.260
but when you shift gears and start working on

00:00:54.259 --> 00:00:58.064
the Dapp and the interaction with the smart contract,

00:00:58.064 --> 00:01:03.155
it's probably not going to be very useful to work with this test code at that point.

00:01:03.155 --> 00:01:09.049
You will want to switch to the server code where we have the ability for you to

00:01:09.049 --> 00:01:17.495
simulate the oracles in the same way that is being simulated here in the test script.

00:01:17.495 --> 00:01:22.480
All right. So just to make sure that we have good code,

00:01:22.480 --> 00:01:27.050
let's try and compile this and see if that works.

00:01:28.620 --> 00:01:32.844
Should see a minimal number of warnings and errors.

00:01:32.844 --> 00:01:36.010
So let's see here.

00:01:36.010 --> 00:01:42.850
This is in 148 in the data file.

00:01:42.849 --> 00:01:46.239
Let's go ahead and address that issue.

00:01:46.239 --> 00:01:51.979
Probably a last minute change that resulted in the word calldata.

00:01:52.459 --> 00:01:56.140
Okay, should be able to compile now.

00:01:58.040 --> 00:02:02.160
As I said, there is going to be potentially a few errors.

00:02:02.159 --> 00:02:07.189
They're really warnings that we are using variables,

00:02:07.189 --> 00:02:10.204
that we are defining variables that are not being used.

00:02:10.205 --> 00:02:12.755
But that's to be expected.

00:02:12.754 --> 00:02:15.689
So that works reasonably well.

00:02:15.689 --> 00:02:19.069
Let's run the test.

00:02:38.939 --> 00:02:45.240
So as expected, not everything related to data is going to fail,

00:02:45.240 --> 00:02:46.865
so you can see that happening.

00:02:46.865 --> 00:02:49.730
So as you build upon this,

00:02:49.729 --> 00:02:51.840
some of those errors will go away.

