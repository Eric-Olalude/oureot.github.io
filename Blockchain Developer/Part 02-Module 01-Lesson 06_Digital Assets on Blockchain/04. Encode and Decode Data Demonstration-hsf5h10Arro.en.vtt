WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.565
Hey and welcome back.

00:00:01.565 --> 00:00:03.450
Hopefully, you had some time to check out some of

00:00:03.450 --> 00:00:06.160
the resources about each of the different encoding schemes.

00:00:06.160 --> 00:00:09.210
In this video, we just wanted to go over a quick demonstration of

00:00:09.210 --> 00:00:12.714
how to encode a file to hexadecimal to show you how easy it is.

00:00:12.714 --> 00:00:14.669
To do this yourself, you'll need to open up

00:00:14.669 --> 00:00:18.164
a terminal Window and cd into whichever directory you like.

00:00:18.164 --> 00:00:19.765
I'll use my desktop.

00:00:19.765 --> 00:00:24.320
First, let's convert back and forth between a string we type directly into the terminal.

00:00:24.320 --> 00:00:28.670
To do this, type, xxd dash p Blockchain Developer.

00:00:28.670 --> 00:00:33.480
What you'll get back is a hex encoded string that represents this text, there it is.

00:00:33.479 --> 00:00:37.169
Now, if we want we can convert this back into its original string.

00:00:37.170 --> 00:00:39.060
To do that, we type echo,

00:00:39.060 --> 00:00:41.870
paste the hex encoded string you got, then the command,

00:00:41.869 --> 00:00:48.394
xxd -r -p. What we get back is the original string, "Blockchain Developer".

00:00:48.395 --> 00:00:51.795
All right, you've already encoded and decoded your first message.

00:00:51.795 --> 00:00:54.335
The command xxd is a Linux command

00:00:54.335 --> 00:00:56.884
that allows you to make a hex dumped or do the reverse.

00:00:56.884 --> 00:00:59.744
If you're not totally sure what that means, it's what we just did.

00:00:59.744 --> 00:01:02.969
A hex dump just provides the hex encoding for any value,

00:01:02.969 --> 00:01:06.454
and the reverse is decoding it back into its original form.

00:01:06.454 --> 00:01:08.599
Doing this in the Terminal is great,

00:01:08.599 --> 00:01:11.265
but what if we want to get this information in the files?

00:01:11.265 --> 00:01:12.810
Well, that's simple too.

00:01:12.810 --> 00:01:16.754
In that case, you just need to provide the file names, we can do that now.

00:01:16.754 --> 00:01:20.899
First, create a file using, touch hello.txt.

00:01:20.900 --> 00:01:23.555
Open that file and type in whatever you like.

00:01:23.555 --> 00:01:26.280
I'll type, Blockchain Developer.

00:01:28.310 --> 00:01:31.359
Now, go back to your terminal and type the command,

00:01:31.359 --> 00:01:35.004
xxd -p, followed by the file you want to convert,

00:01:35.004 --> 00:01:36.384
and the new filename.

00:01:36.385 --> 00:01:41.260
For me, that's hello.txt and helloEncoded.txt.

00:01:41.260 --> 00:01:45.285
This creates the encoded file for you to view if you'd like.

00:01:45.284 --> 00:01:48.114
Now that you have that, let's decode it.

00:01:48.114 --> 00:01:51.254
To do this, we'll use -r to reverse the hex dump.

00:01:51.254 --> 00:01:53.659
We'll follow this again with the original file and

00:01:53.659 --> 00:01:56.655
the file you'd like to create, that looks like this.

00:01:56.655 --> 00:02:00.640
I'll call my final file, helloDecoded.txt.

00:02:00.640 --> 00:02:04.325
After running this, we can see that we're back in the original text file.

00:02:04.325 --> 00:02:08.555
You can look at the file to see that is the same string that you had before.

00:02:08.555 --> 00:02:11.240
Finally, let's try this with an image.

00:02:11.240 --> 00:02:14.900
To get started, I'll go search for an image and bring it into my desktop.

00:02:14.900 --> 00:02:16.640
I'll get a cat picture for now,

00:02:16.639 --> 00:02:20.509
and rename it to something simple, cat.png.

00:02:23.569 --> 00:02:27.745
Next, open your terminal then use the same command as before.

00:02:27.745 --> 00:02:31.819
Type, xxd -p, followed by the name of your file,

00:02:31.819 --> 00:02:35.489
and follow that with the name of the file you want the hex to be dumped to.

00:02:35.490 --> 00:02:38.840
Running this encodes this image file as hexadecimal.

00:02:38.840 --> 00:02:42.219
If you open it, you'll see that it's a lot longer than the text dump was.

00:02:42.219 --> 00:02:45.555
Now, let's decode this back into its original image.

00:02:45.555 --> 00:02:48.319
Type, xxd -p -r,

00:02:48.319 --> 00:02:50.389
followed by the name of your file,

00:02:50.389 --> 00:02:53.864
followed by the name of the file you want for your new PNG.

00:02:53.865 --> 00:02:56.270
Now, we're back to our original image.

00:02:56.270 --> 00:02:58.580
Pretty cool. All right, so that's it.

00:02:58.580 --> 00:02:59.860
It's pretty quick and simple,

00:02:59.860 --> 00:03:03.495
but it's interesting to see that you can begin working with these encodings for yourself.

00:03:03.495 --> 00:03:06.110
We placed a couple of files down below the video with

00:03:06.110 --> 00:03:09.070
a problem set you can use to try encoding and decoding.

