WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.480
Now that you're familiar with the purpose of UML diagrams,

00:00:03.480 --> 00:00:06.525
and we have established our assumptions for pet chopped up.

00:00:06.525 --> 00:00:07.980
In the following sections,

00:00:07.980 --> 00:00:11.490
I'll walk you through the different UML diagrams for this use case,

00:00:11.490 --> 00:00:14.039
and then you'll get a chance to diagram a solution of your own.

00:00:14.039 --> 00:00:16.890
Now let's start out by building our activity diagram.

00:00:16.890 --> 00:00:19.500
For the purpose of the activity diagram is to represent

00:00:19.500 --> 00:00:23.115
the flow of one activity to another in the system.

00:00:23.114 --> 00:00:26.114
It captures the dynamic behavior of the system.

00:00:26.114 --> 00:00:30.029
There are different methods to depict an activity diagram, but in our case,

00:00:30.030 --> 00:00:32.539
we'll be using swimlanes which visually

00:00:32.539 --> 00:00:36.159
clarifies which actor is responsible for which step.

00:00:36.159 --> 00:00:39.589
In this case, the process and decisions are grouped into

00:00:39.590 --> 00:00:43.715
lanes of whom the actors or the breeder and the owner.

00:00:43.715 --> 00:00:46.295
Now let's zoom into the activities of each actor.

00:00:46.295 --> 00:00:49.190
For the breeder starting at the start symbol,

00:00:49.189 --> 00:00:50.494
they're going to raise the pet,

00:00:50.494 --> 00:00:52.879
and then provide the proper vaccinations when needed.

00:00:52.880 --> 00:00:54.785
Once the pet is ready for adoption,

00:00:54.784 --> 00:00:58.549
the breeder post the pet online for potential adopters to review.

00:00:58.549 --> 00:01:01.009
When the adopter applications come through,

00:01:01.009 --> 00:01:03.545
the breeder will review the applications and decide

00:01:03.545 --> 00:01:06.409
on awesome new potential adopter whom they get to meet.

00:01:06.409 --> 00:01:08.164
Once the adoption is finalized,

00:01:08.165 --> 00:01:11.120
the owner gets to adopt a wonderful new pet into their home.

00:01:11.120 --> 00:01:14.719
Now before we continue to our sequence diagram I'd like you to take some time to

00:01:14.719 --> 00:01:18.784
practice designing your own simple activity diagram for a blockchain solution.

00:01:18.784 --> 00:01:20.989
Doing so will help you begin thinking about how to

00:01:20.989 --> 00:01:23.659
design the architecture for your capstone project,

00:01:23.659 --> 00:01:26.375
for which you'll need to submit UML diagrams.

00:01:26.375 --> 00:01:30.290
It's okay if the idea that you're working on now isn't your final project.

00:01:30.290 --> 00:01:32.780
Doing this practice will help you recognize things to

00:01:32.780 --> 00:01:35.269
watch out for and find out critical information,

00:01:35.269 --> 00:01:36.739
such as who are the actors,

00:01:36.739 --> 00:01:38.170
what is the business process,

00:01:38.170 --> 00:01:40.129
and what are the attributes of this acid.

00:01:40.129 --> 00:01:43.789
Additionally, these are the same thought processes that you'll go

00:01:43.790 --> 00:01:47.665
through when working as a blockchain developer on any application.

00:01:47.665 --> 00:01:49.580
Get as much practice as you can now,

00:01:49.579 --> 00:01:53.519
so that when it comes time to draft that big project you'll be reading.

