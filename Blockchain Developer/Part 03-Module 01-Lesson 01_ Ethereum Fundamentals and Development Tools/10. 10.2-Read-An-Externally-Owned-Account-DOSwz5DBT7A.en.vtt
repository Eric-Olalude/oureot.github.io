WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.870
Up until this point, we've already been looking at externally owned accounts.

00:00:03.870 --> 00:00:06.000
In the last concept, you called the balance of

00:00:06.000 --> 00:00:09.660
an externally owned account and the return value looks similar to this.

00:00:09.660 --> 00:00:11.429
We'll skip walking through this again,

00:00:11.429 --> 00:00:14.309
and instead try a couple more things you might be interested in.

00:00:14.310 --> 00:00:17.955
Feel free to grab another account balance if you'd like to follow along.

00:00:17.954 --> 00:00:20.099
As I mentioned, in some cases,

00:00:20.100 --> 00:00:22.140
we might prefer to have the value of Ethereum

00:00:22.140 --> 00:00:24.660
returned to us rather than the value of Wei.

00:00:24.660 --> 00:00:29.280
In this case, we can use the web3.utils library to make this conversion.

00:00:29.280 --> 00:00:34.859
To do this, pass the account balance into the web3.utils.fromWei function like this.

00:00:34.859 --> 00:00:37.439
The fromWei function will convert any value from

00:00:37.439 --> 00:00:40.769
Wei into the denomination you specify in the second value.

00:00:40.770 --> 00:00:43.340
In this case, I specified Ether.

00:00:43.340 --> 00:00:45.515
So, what I get back is the account balance in Ether.

00:00:45.515 --> 00:00:47.195
Great, that was quick.

00:00:47.195 --> 00:00:48.770
So, let's try one more.

00:00:48.770 --> 00:00:51.650
Let's say we wanted the transaction count of this account.

00:00:51.649 --> 00:00:53.254
Going through the documentation,

00:00:53.255 --> 00:00:57.170
I found a function named getTransactionCount in the web3.eth module.

00:00:57.170 --> 00:01:00.200
You can use the callback function as they show you just like before,

00:01:00.200 --> 00:01:03.395
but I thought it might be interesting to show you a different way to do it.

00:01:03.395 --> 00:01:09.875
We can also do this using.then..then is another way to return a promise using JavaScript.

00:01:09.875 --> 00:01:12.469
If we use this to console.log the result,

00:01:12.469 --> 00:01:14.959
we'll get back the transaction count when we first run

00:01:14.959 --> 00:01:17.989
the command rather than needing to call the variable afterwards.

00:01:17.989 --> 00:01:19.504
So, I'll run this now,

00:01:19.504 --> 00:01:22.879
and what I get back is the number of transactions this account has completed.

00:01:22.879 --> 00:01:27.140
So, there's two more functions you can call to get data from externally owned accounts.

00:01:27.140 --> 00:01:28.909
At this point, you're hopefully comfortable

00:01:28.909 --> 00:01:31.084
enough to just start going through documentation,

00:01:31.084 --> 00:01:34.204
digging around, and seeing the type of data you'd like to grab for yourself.

00:01:34.204 --> 00:01:37.000
From there, try it in your terminal and see how it works.

