WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.004
Let's take a look at SHA256 in action.

00:00:03.004 --> 00:00:06.540
We'll demonstrate this using the website anders.com,

00:00:06.540 --> 00:00:10.945
the website provides an excellent demonstration to show how hash values work.

00:00:10.945 --> 00:00:14.990
We put a link to the site below the video if you'd like to follow along.

00:00:14.990 --> 00:00:18.390
When you get to the site navigate to the hash section

00:00:18.390 --> 00:00:21.875
from the top and you should end up with a screen that looks similar to this.

00:00:21.875 --> 00:00:27.164
To start, you'll notice I have a place to input data and a corresponding hash value,

00:00:27.164 --> 00:00:30.015
what this site does is generate a unique hash

00:00:30.015 --> 00:00:33.494
using SHA256 from whatever data you type in.

00:00:33.494 --> 00:00:38.439
Try typing something and notice how the hash value changes every time the data changes,

00:00:38.439 --> 00:00:43.179
if I type in block chain developer nano degree program I get a hash value.

00:00:43.179 --> 00:00:46.920
This hash is the unique value for this string of text,

00:00:46.920 --> 00:00:50.340
if I remove some texts like the word developer,

00:00:50.340 --> 00:00:52.500
the hash become something completely different.

00:00:52.500 --> 00:00:55.259
It's something unique to the new words I wrote.

00:00:55.259 --> 00:00:58.809
If I type the word developer back into my original texts,

00:00:58.810 --> 00:01:00.770
I'm back to the original hash.

00:01:00.770 --> 00:01:04.750
The value for this data will always be the exact same string.

00:01:04.750 --> 00:01:06.719
If anyone in the world inputs

00:01:06.719 --> 00:01:11.125
this exact same string they would also get the exact same hash output,

00:01:11.125 --> 00:01:13.599
but if the data is similar but not exactly the

00:01:13.599 --> 00:01:16.314
same it will be a completely different hash value.

00:01:16.314 --> 00:01:20.634
Similar data doesn't necessarily mean that the hash values will be similar.

00:01:20.635 --> 00:01:26.120
Changing the data slightly can result in a completely different and unrelated hash value.

00:01:26.120 --> 00:01:29.935
The only purpose of the hash is to make sure it's a unique value

00:01:29.935 --> 00:01:31.870
it is not something to reference if you're

00:01:31.870 --> 00:01:34.569
interested in understanding how data is related.

00:01:34.569 --> 00:01:37.939
That's the basic purpose of a SHA256 Hash,

00:01:37.939 --> 00:01:42.105
it's used to produce a digital identity for any given value of data.

00:01:42.105 --> 00:01:45.069
Remember this basic idea as we go into blocks,

00:01:45.069 --> 00:01:47.549
blockchains and more detailed concepts.

00:01:47.549 --> 00:01:52.399
The hash always serves this one simple purpose that's true whether we type in data

00:01:52.400 --> 00:01:55.340
ourselves we get data from somewhere else or

00:01:55.340 --> 00:01:58.655
the data is an entire block including many transactions.

00:01:58.655 --> 00:02:02.704
Hopefully this demonstration helps make hashing seem a little more approachable.

00:02:02.704 --> 00:02:04.789
We don't need to know many more details than this for

00:02:04.790 --> 00:02:06.950
now but if you're interested in learning more,

00:02:06.950 --> 00:02:09.288
we've linked some resources down below the video.

00:02:09.288 --> 00:02:11.509
Feel free to play around with this tool to help

00:02:11.509 --> 00:02:13.530
get a better idea of how hash values work.

