WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.139
In this video, we'll give a quick demonstration,

00:00:04.139 --> 00:00:08.640
of how a block works using the website Anders.com.

00:00:08.640 --> 00:00:13.810
Let's navigate to http://anders.com/blockchain.

00:00:17.839 --> 00:00:19.949
When you get to the site,

00:00:19.949 --> 00:00:24.044
navigate to the block section from the top and you should end up with a screen,

00:00:24.045 --> 00:00:25.770
that's similar to ours.

00:00:25.769 --> 00:00:30.644
Here, you'll see a block with a few values; the block number,

00:00:30.644 --> 00:00:36.435
the nonce, data and the block hash.

00:00:36.435 --> 00:00:39.969
The block doesn't have any transactions in it yet but,

00:00:39.969 --> 00:00:42.384
this all works the same either way.

00:00:42.384 --> 00:00:47.954
To start, try typing Blockchain Developer Nanodegree Program.

00:00:47.954 --> 00:00:51.820
Click Mine and it gives you a hash.

00:00:51.820 --> 00:00:54.844
This hash is just like the one we had before.

00:00:54.844 --> 00:01:00.159
It's the result of running all the information through the SHA-256 Hash Algorithm.

00:01:00.159 --> 00:01:03.549
The difference now is that if we change the data,

00:01:03.549 --> 00:01:07.045
say by deleting the word Developer,

00:01:07.045 --> 00:01:10.590
the hash changes and the block turned red.

00:01:10.590 --> 00:01:15.359
This is just a visual way to show you that this block is no longer valid.

00:01:15.359 --> 00:01:18.150
It knows that the data no longer matches

00:01:18.150 --> 00:01:21.750
the original data because the hash value is different.

00:01:21.750 --> 00:01:26.234
If you change the data back by adding the word Developer back in,

00:01:26.234 --> 00:01:29.370
the block will be valid and turn green.

00:01:29.370 --> 00:01:31.469
As you mess around with this,

00:01:31.469 --> 00:01:33.329
notice a few more things.

00:01:33.329 --> 00:01:37.709
Each time you click Mine for new data,

00:01:37.709 --> 00:01:40.469
a new nonce is generated.

00:01:40.469 --> 00:01:42.914
That's the nonce we mentioned earlier.

00:01:42.915 --> 00:01:46.980
Hence the solution to the problem that we've talked about.

00:01:46.980 --> 00:01:52.170
Also notice how the final hash value always leads with a few zeros.

00:01:52.170 --> 00:01:55.935
This amount of zeros is set by the block difficulty.

00:01:55.935 --> 00:01:58.980
Finally, let's see one more thing,

00:01:58.980 --> 00:02:00.630
you can change the data,

00:02:00.629 --> 00:02:03.614
say by removing the word Nanodegree,

00:02:03.614 --> 00:02:06.390
and then click Mine again.

00:02:06.390 --> 00:02:11.710
This will rerun the mining process to generate a new block,

00:02:11.710 --> 00:02:15.360
create a valid hash and turn the block green.

00:02:15.360 --> 00:02:19.495
The nonce is changed and so did the hash.

00:02:19.495 --> 00:02:22.000
Now that we have a valid block,

00:02:22.000 --> 00:02:24.710
that starts to get a little interesting.

00:02:24.710 --> 00:02:29.740
What this means is that it's possible to change data and update the hash,

00:02:29.740 --> 00:02:33.325
maybe before anyone notices it even happened.

00:02:33.324 --> 00:02:37.269
This means you could actually change the data to whatever you like,

00:02:37.270 --> 00:02:39.025
which is a huge problem.

00:02:39.025 --> 00:02:43.270
Security measures have been implemented to ensure this doesn't happen.

00:02:43.270 --> 00:02:45.925
But it's an interesting idea to think about.

00:02:45.925 --> 00:02:47.680
We'll cover this more later.

00:02:47.680 --> 00:02:53.210
But until then, try to think about how you might go about stopping this from happening.

00:02:53.210 --> 00:02:56.590
That wraps up the demonstration on how blocks work.

00:02:56.590 --> 00:02:58.479
Feel free to mess around with this website

00:02:58.479 --> 00:03:00.834
more until you're comfortable with these ideas,

00:03:00.835 --> 00:03:05.330
and when you're ready, we'll see you in the next concept.

