WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.465
There are many ways to achieve consensus and

00:00:03.465 --> 00:00:06.910
different methods are used across different blockchains.

00:00:06.910 --> 00:00:12.060
One very successful consensus algorithm is known as Proof of Stake.

00:00:12.060 --> 00:00:15.330
In this video, we'll cover how proof of stake works,

00:00:15.330 --> 00:00:17.315
potential challenges if faces,

00:00:17.315 --> 00:00:19.330
and who's using it.

00:00:19.330 --> 00:00:22.830
Proof of stake is a consensus algorithm that seeks

00:00:22.830 --> 00:00:26.380
to achieve consensus by giving vote to those with stake.

00:00:26.380 --> 00:00:29.160
Stake in this case means those who have

00:00:29.160 --> 00:00:32.985
the most investment in a positive outcome for this system.

00:00:32.985 --> 00:00:36.510
These users are considered the most likely to vote on making

00:00:36.510 --> 00:00:40.900
a positive impact on or improvement of the system.

00:00:40.900 --> 00:00:43.050
How does proof of stake work?

00:00:43.050 --> 00:00:45.375
In the proof of stake consensus protocol,

00:00:45.375 --> 00:00:46.815
there are no miners.

00:00:46.815 --> 00:00:49.795
Instead, there are validators.

00:00:49.795 --> 00:00:53.820
These validators do not need to invest in computing equipment to mine

00:00:53.820 --> 00:00:58.800
the blocks that create coins because all the coins exist from the outset.

00:00:58.800 --> 00:01:01.445
Instead, the purpose of these validators,

00:01:01.445 --> 00:01:03.130
also known as stakeholders,

00:01:03.130 --> 00:01:07.260
is to determine which block makes it onto the blockchain.

00:01:07.260 --> 00:01:10.980
In order to validate transactions and create blocks,

00:01:10.980 --> 00:01:14.380
validators put up their own coins as stake.

00:01:14.380 --> 00:01:17.990
You can think of it as if they were placing a bet.

00:01:17.990 --> 00:01:20.700
If they validate a fraudulent transaction,

00:01:20.700 --> 00:01:23.550
they lose their holdings as well as their right to

00:01:23.550 --> 00:01:26.670
participate as a validator in the future.

00:01:26.670 --> 00:01:32.695
In theory, this check incentivizes the system to validate only truthful transactions.

00:01:32.695 --> 00:01:34.110
In proof of stake,

00:01:34.110 --> 00:01:38.550
the greater the fraction of the total the coins a validator owns,

00:01:38.550 --> 00:01:40.890
the higher their chances of being picked to create

00:01:40.890 --> 00:01:44.410
the next block because they have a higher stake.

00:01:44.410 --> 00:01:48.550
A validator node with 400 coins will be four times

00:01:48.550 --> 00:01:52.885
as likely to be chosen compared to a node that only has 100 coins.

00:01:52.885 --> 00:01:55.125
If a validator's block is added.

00:01:55.125 --> 00:01:59.830
The validator is awarded coin to proportional to the amount of their bet.

00:01:59.830 --> 00:02:02.810
With that said this begs the question,

00:02:02.810 --> 00:02:06.760
isn't it possible for a bad acting validator not to lose

00:02:06.760 --> 00:02:12.160
anything by betting on multiple blocks so they always win out in the end?

00:02:12.160 --> 00:02:15.850
Very good. You've stumbled across what's referred

00:02:15.850 --> 00:02:20.310
to as the nothing at stake problem for proof of stake.

00:02:20.310 --> 00:02:24.320
There's something about blockchains that we haven't mentioned before,

00:02:24.320 --> 00:02:27.665
the possibility for that single chain to fork.

00:02:27.665 --> 00:02:31.849
When a blockchain is extending under the proof of stake paradigm

00:02:31.849 --> 00:02:35.990
it's possible a fork in the blockchain can occur either accidentally.

00:02:35.990 --> 00:02:40.040
For example, if some nodes receive information to add

00:02:40.040 --> 00:02:44.089
one block while others receive an update to add another block,

00:02:44.089 --> 00:02:49.005
or because there is a malicious attempt to rewrite the history and reverse a transaction.

00:02:49.005 --> 00:02:54.440
In other words, if there are multiple competing block options isn't it possible for

00:02:54.440 --> 00:03:01.045
a bad acting validator to just place bets on every block so they always come out on top?

00:03:01.045 --> 00:03:03.590
It's true. These are possibilities,

00:03:03.590 --> 00:03:08.685
but proponents of proof of stake have strategies against these types of attacks.

00:03:08.685 --> 00:03:11.605
One strategy is a Slasher solution.

00:03:11.605 --> 00:03:17.580
Which entails penalizing validators if they simultaneously create blocks on multiple chains.

00:03:17.580 --> 00:03:20.370
Alternatively, some protocols use

00:03:20.370 --> 00:03:25.205
a strategy that punishes validators for creating blocks on the wrong chain.

00:03:25.205 --> 00:03:28.530
In this method, validators must be selective and

00:03:28.530 --> 00:03:31.990
conscious about which blockchain they put their stakes in.

00:03:31.990 --> 00:03:34.095
Who uses proof of stake?

00:03:34.095 --> 00:03:36.750
Ethereum is switching from proof of work,

00:03:36.750 --> 00:03:40.910
to proof of stake in a project code-named casper.

00:03:40.910 --> 00:03:46.580
Digital cash, or Dash is one of the pioneers of proof of stake algorithm.

00:03:46.580 --> 00:03:49.800
It's built on the core Bitcoin platform,

00:03:49.800 --> 00:03:52.750
but with added privacy and speedy transaction

00:03:52.750 --> 00:03:56.080
features such as PrivateSend, and InstantSend.

00:03:56.080 --> 00:03:57.800
There's also Lisk.

00:03:57.800 --> 00:04:01.925
Designed to allow developers to create their own decentralized Apps.

00:04:01.925 --> 00:04:04.815
Similar in function to Ethereum or NEO,

00:04:04.815 --> 00:04:07.360
but allowing developers to use JavaScript.

00:04:07.360 --> 00:04:12.940
Lisk uses a customized form of proof of stake called delegated proof of stake.

00:04:12.940 --> 00:04:19.380
This just means that only the top 101 delegates are able to have stakes in the network,

00:04:19.380 --> 00:04:23.645
and these delegates are voted on a rolling basis by the community.

00:04:23.645 --> 00:04:26.160
One Lisk equals one vote.

00:04:26.160 --> 00:04:28.480
Now, that wraps it up for proof of stake.

00:04:28.480 --> 00:04:31.440
The next method of consensus we will cover is

00:04:31.440 --> 00:04:36.440
Delegated Byzantine Fault Tolerance,DBFT for short.

