WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.209
This was kind of a trick question because all of

00:00:03.209 --> 00:00:06.890
the list answers are ways a transaction can leave the memory pool.

00:00:06.889 --> 00:00:09.445
Let's recap the possible situations.

00:00:09.445 --> 00:00:13.214
First, if this transaction has been sitting in the MemPool for too long,

00:00:13.214 --> 00:00:14.580
at the time of this recording,

00:00:14.580 --> 00:00:16.635
14 days, it will be removed.

00:00:16.635 --> 00:00:18.265
In the next possibility,

00:00:18.265 --> 00:00:20.730
assume all transactions are sorted by

00:00:20.730 --> 00:00:23.719
fee size with the lowest transaction fee at the bottom.

00:00:23.719 --> 00:00:26.039
If the memory pool reaches its size limit and

00:00:26.039 --> 00:00:28.829
a new higher transaction fee is accepted into the memory pool,

00:00:28.829 --> 00:00:32.129
the transaction with the lowest fee is pushed out of the MemoryPool.

00:00:32.130 --> 00:00:36.929
So, this answer choice discusses a concept we didn't cover just yet, fees.

00:00:36.929 --> 00:00:41.079
Confirming Bitcoin transactions requires a lot of computational energy.

00:00:41.079 --> 00:00:43.750
That means a lot of electricity bills to pay.

00:00:43.750 --> 00:00:46.694
Every time a sender puts out a transaction,

00:00:46.694 --> 00:00:48.890
they can add on a transaction fee.

00:00:48.890 --> 00:00:50.829
Think of this as a tip for the miner.

00:00:50.829 --> 00:00:54.579
Not all transactions come with identical transaction fees.

00:00:54.579 --> 00:00:58.530
Miners can look through all possible transactions in the MemoryPool

00:00:58.530 --> 00:01:02.640
to see which ones have transaction fees and look at their values.

00:01:02.640 --> 00:01:05.894
Miners, like most people, like being paid.

00:01:05.894 --> 00:01:09.504
So, they'll choose to validate transactions with higher fees.

00:01:09.504 --> 00:01:11.709
But let's circle back to the question.

00:01:11.709 --> 00:01:14.734
If the MemoryPool was reaching its max size limit

00:01:14.734 --> 00:01:18.140
and a new transaction entered that had a higher transaction fee,

00:01:18.140 --> 00:01:19.400
then the transaction with

00:01:19.400 --> 00:01:23.285
the lower transaction fee would be deprioritized and squeeze out.

00:01:23.284 --> 00:01:25.640
The third choice, that the transaction was

00:01:25.640 --> 00:01:28.474
included in the block is one that we discussed earlier.

00:01:28.474 --> 00:01:30.589
Now the reasons transactions wait in

00:01:30.590 --> 00:01:33.549
the MemoryPool in the first place is in hopes of being validated,

00:01:33.549 --> 00:01:36.939
then they can leave and permanently be added to the blockchain.

00:01:36.939 --> 00:01:39.194
Finally, the last entry choice.

00:01:39.194 --> 00:01:42.159
The transaction or one of its unconfirmed ancestors

00:01:42.159 --> 00:01:45.539
might conflict with a transaction that was already included in a block.

00:01:45.540 --> 00:01:49.274
Remember that the blockchain keeps a prominent history of transactions.

00:01:49.274 --> 00:01:51.859
Once a transaction is included in a block,

00:01:51.859 --> 00:01:54.549
it's considered to have one confirmation.

00:01:54.549 --> 00:01:57.719
As soon as another block is mined on the same blockchain,

00:01:57.719 --> 00:01:59.894
the transaction has two confirmations.

00:01:59.894 --> 00:02:02.519
The transaction continues to get more confirmations

00:02:02.519 --> 00:02:05.609
as more blocks are mined on that same blockchain.

00:02:05.609 --> 00:02:07.950
Six or more confirmations is considered

00:02:07.950 --> 00:02:11.055
sufficient proof that a transaction cannot be reversed.

00:02:11.055 --> 00:02:14.280
So, there's a 99.9 percent confidence rating that

00:02:14.280 --> 00:02:17.974
there's no errors with the transaction that have been added to the blockchain.

00:02:17.974 --> 00:02:20.139
This means that if the transaction in

00:02:20.139 --> 00:02:23.000
question conflicts with what's already on the blockchain,

00:02:23.000 --> 00:02:25.389
chances are there's something wrong with it

00:02:25.389 --> 00:02:29.214
and that transaction will be denied and have to leave the MemoryPool.

00:02:29.215 --> 00:02:33.085
Now we know some of the ways a transaction can leave the MemPool.

00:02:33.085 --> 00:02:37.140
But it's important to know that transactions that have left are always welcome back.

00:02:37.139 --> 00:02:39.889
For example, when they're part of the local wallet and get

00:02:39.889 --> 00:02:44.029
rebroadcast or when they're received again over the network.

00:02:44.030 --> 00:02:46.944
Eviction does not imply a transaction is canceled,

00:02:46.944 --> 00:02:48.504
there is still hope.

00:02:48.504 --> 00:02:52.250
In this concept, we learned about the importance of the MemoryPool.

00:02:52.250 --> 00:02:54.379
From there, miners will bundle up

00:02:54.379 --> 00:02:57.710
transactions into blocks that will be added into the blockchain.

00:02:57.710 --> 00:03:00.980
We also saw that there are reasons that a transaction might leave

00:03:00.979 --> 00:03:04.424
the MemPool but not make it into the blockchain.

00:03:04.425 --> 00:03:08.090
Perhaps the transaction is invalid or maybe it's timed out.

00:03:08.090 --> 00:03:10.789
Well, the MemPool is a temporary place to check

00:03:10.789 --> 00:03:14.009
our work before sending it permanently into the blockchain.

00:03:14.009 --> 00:03:18.564
Now the purpose of this holding pool is to provide transaction security.

00:03:18.564 --> 00:03:23.444
Once a transaction is included in a block and that block has been confirmed six times,

00:03:23.444 --> 00:03:26.909
meaning five additional blocks have been added to that same chain,

00:03:26.909 --> 00:03:30.789
that block is considered irrevocable as it will require

00:03:30.789 --> 00:03:35.354
an immense amount of computation to invalidate and recalculate those six blocks.

00:03:35.354 --> 00:03:37.984
As with many aspects we've discussed before,

00:03:37.985 --> 00:03:41.740
because the purpose of the blockchain is to exist as a transparent,

00:03:41.740 --> 00:03:43.350
immutable source of truth,

00:03:43.349 --> 00:03:46.239
the information on it is not checked once,

00:03:46.240 --> 00:03:51.129
twice or three times but six times to ensure security.

