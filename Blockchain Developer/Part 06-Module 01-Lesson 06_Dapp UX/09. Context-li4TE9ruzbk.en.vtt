WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.910
The next item is Context.

00:00:02.910 --> 00:00:06.360
As web developers and as app developers,

00:00:06.360 --> 00:00:12.900
we are automatically thinking and switching contexts

00:00:12.900 --> 00:00:20.410
between staging and production and between main net and test net and Ganache et cetera.

00:00:20.410 --> 00:00:25.214
Now, there might be scenarios where you want the user to use

00:00:25.214 --> 00:00:30.910
your DAP and you want them to train for it and use transactions that are simulated,

00:00:30.910 --> 00:00:33.079
in which case, you might give them the option to say, ''Hey,

00:00:33.079 --> 00:00:35.689
why don't we use the test environment et cetera?''

00:00:35.689 --> 00:00:40.549
So it's important that when you have such scenarios,

00:00:40.549 --> 00:00:45.109
when the user has the ability to simulate or test things et cetera,

00:00:45.109 --> 00:00:48.530
that there is absolutely clear context in

00:00:48.530 --> 00:00:54.270
the application so that the user knows when they are live and when they are not.

00:00:54.270 --> 00:00:56.975
There's various ways in which you can do this.

00:00:56.975 --> 00:01:02.359
Obviously, a simple message when they switch contexts would get the job done,

00:01:02.359 --> 00:01:05.075
but it's really not going to stick in the user's mind

00:01:05.075 --> 00:01:08.480
especially if the task they are doing is taking a lot of time.

00:01:08.480 --> 00:01:11.810
A better way to approach it would be to always display

00:01:11.810 --> 00:01:16.840
the contexts name very clearly and if possible use color,

00:01:16.840 --> 00:01:21.859
maybe a colored bar or colored region on the screen that indicates that you're

00:01:21.859 --> 00:01:27.289
currently in a different context than what the live context is.

00:01:27.290 --> 00:01:32.750
This is also especially true when your users are doing testing.

00:01:32.750 --> 00:01:34.909
Perhaps you have a QA team et cetera.

00:01:34.909 --> 00:01:37.579
It's important for them to know also when they are gathering

00:01:37.579 --> 00:01:41.144
information about which context they're using.

00:01:41.144 --> 00:01:45.049
In test environments, responses tend to happen very fast

00:01:45.049 --> 00:01:50.134
because they don't have the burden of all the public transactions happening.

00:01:50.135 --> 00:01:55.189
So a user might think they are doing something that is working in live,

00:01:55.189 --> 00:01:56.989
but they're really just doing it in testing.

00:01:56.989 --> 00:01:58.324
You don't want to confuse them.

00:01:58.325 --> 00:02:06.950
Most importantly, if the transaction is going to result in financial actions,

00:02:06.950 --> 00:02:09.319
you want to be very clear that they are in

00:02:09.319 --> 00:02:13.069
a live environment and not in a test environment.

00:02:13.069 --> 00:02:15.379
So context is important.

00:02:15.379 --> 00:02:20.479
Use color. Use clear language to indicate that that's happening.

00:02:20.479 --> 00:02:26.844
There's also the other kind of context beyond just the test environment.

00:02:26.844 --> 00:02:34.425
That's about what kind of state the user's DAP environment is in.

00:02:34.425 --> 00:02:39.110
So, potentially, your blockchain smart contract

00:02:39.110 --> 00:02:42.785
has states and the user is going through different states.

00:02:42.784 --> 00:02:47.359
So that's another context that you want to clarify and make sure the user is aware.

00:02:47.360 --> 00:02:50.480
Perhaps there is a pending state for a transaction.

00:02:50.479 --> 00:02:57.289
Now, we talked earlier about how because the time elapsed might be very long,

00:02:57.289 --> 00:02:58.474
you want to notify them.

00:02:58.474 --> 00:03:02.090
But what happens when they go and try and redo

00:03:02.090 --> 00:03:06.050
a transaction that is already in the pending state and retry it?

00:03:06.050 --> 00:03:07.640
You obviously don't want that to happen.

00:03:07.639 --> 00:03:10.404
You don't want this scenario where you retry.

00:03:10.405 --> 00:03:13.490
On the web, we have solved that problem more or less by having

00:03:13.490 --> 00:03:16.715
buttons that are disabled when you click them and things like that.

00:03:16.715 --> 00:03:19.789
We need to make sure that the same thing occurs here,

00:03:19.789 --> 00:03:22.789
but we need to be a little more overt about it and make

00:03:22.789 --> 00:03:25.939
sure that when a transaction is in the pending state,

00:03:25.939 --> 00:03:29.060
that the user knows that very clearly and they have clear context about

00:03:29.060 --> 00:03:33.300
that so they don't try and retry that transaction.

