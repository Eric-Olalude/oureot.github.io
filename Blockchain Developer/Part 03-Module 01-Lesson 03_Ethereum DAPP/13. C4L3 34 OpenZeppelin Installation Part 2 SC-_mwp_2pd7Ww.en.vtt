WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.060
So, one thing we of course did not do in the last video.

00:00:03.060 --> 00:00:05.099
So, we did the truffle unbox webpack,

00:00:05.099 --> 00:00:09.285
and then now we also need to install OpenZeppelin so that we can import this contract.

00:00:09.285 --> 00:00:11.099
So, we didn't do that in our last video.

00:00:11.099 --> 00:00:14.550
So, let's do NPM install the VCM in my video,

00:00:14.550 --> 00:00:15.690
the starNotary version two.

00:00:15.689 --> 00:00:21.449
So, I'm doing NPM install, open Zeppelin-solidity.

00:00:21.449 --> 00:00:24.530
Now, this just takes a little while to go through it,

00:00:24.530 --> 00:00:26.030
and then once it does that,

00:00:26.030 --> 00:00:28.720
lets in fact go back to our editor.

00:00:28.719 --> 00:00:31.820
So, if you see my editor, I'm actually in my project right now.

00:00:31.820 --> 00:00:33.229
The directory, I've added the directory.

00:00:33.229 --> 00:00:34.579
So, whatever editor that you're using,

00:00:34.579 --> 00:00:35.750
let me just quickly scroll up.

00:00:35.750 --> 00:00:37.369
So, in my starNotary version two.

00:00:37.369 --> 00:00:40.329
Now, this was in version one I did. This is version two.

00:00:40.329 --> 00:00:41.920
Let's do some clean up here.

00:00:41.920 --> 00:00:43.460
So, we're going to go into contracts folder.

00:00:43.460 --> 00:00:46.039
Remember, we don't need any of these except the migration so

00:00:46.039 --> 00:00:49.615
let's go delete this file now.

00:00:49.615 --> 00:00:53.250
We don't need the second one, also the MetaCoin.sol.

00:00:53.250 --> 00:00:56.119
Again, this is all boilerplate code that comes along,

00:00:56.119 --> 00:00:59.834
that we don't need and we're just going to do some clean up here.

00:00:59.835 --> 00:01:03.689
Don't need that and in the testing also, we don't need,

00:01:03.689 --> 00:01:07.560
remember this one, which is the MetaCoin testing file.

00:01:07.560 --> 00:01:09.680
We don't need that so I'm going to go delete that.

00:01:09.680 --> 00:01:11.660
Fantastic. I'm just doing some clean up here

00:01:11.659 --> 00:01:14.435
until the installation opens up when this is happening.

00:01:14.435 --> 00:01:16.519
So, we're deleting anything that we don't need.

00:01:16.519 --> 00:01:19.819
So, I cleaned up my contracts folder except the migrations file left,

00:01:19.819 --> 00:01:22.204
and except in the test environments.

00:01:22.204 --> 00:01:25.179
I left this one and everything else I've just deleted.

00:01:25.180 --> 00:01:28.520
So, now let's go see if open Zeppelin has happened.

00:01:28.519 --> 00:01:29.810
Fantastic. So, it's all happened.

00:01:29.810 --> 00:01:31.385
So now, let's go back to my editor,

00:01:31.385 --> 00:01:34.160
and we're going to look at how this file,

00:01:34.159 --> 00:01:36.859
the one that we were just looking in our GitHub page,

00:01:36.859 --> 00:01:38.929
so let's go to our open summary, then Node Modules.

00:01:38.930 --> 00:01:42.170
I'm going to scroll down you might see me scrolling down

00:01:42.170 --> 00:01:45.620
fast because I'm trying to get to open Zeppelin that starts with O.

00:01:45.620 --> 00:01:47.965
Then I'm going to show you how to get you to the file.

00:01:47.965 --> 00:01:49.439
So, that opens Zeppelin,

00:01:49.439 --> 00:01:51.929
just because it did open NPM install, it comes right there.

00:01:51.930 --> 00:01:53.625
Go into the Contracts folder.

00:01:53.625 --> 00:01:54.920
Once in a Contract folder,

00:01:54.920 --> 00:01:58.594
you can go into token folder and then ERC 721 folder,

00:01:58.594 --> 00:02:00.575
and then ERC 721.sol.

00:02:00.575 --> 00:02:02.375
So, that's the file that we're looking at.

00:02:02.375 --> 00:02:04.019
Fantastic. So, that's the file.

00:02:04.019 --> 00:02:07.685
If you look in this file, this is what that we were just looking at on the GitHub page,

00:02:07.685 --> 00:02:10.324
also there's some functions that they've implemented.

00:02:10.324 --> 00:02:13.264
Of course, we'll add some more of ours too in our contract.

00:02:13.264 --> 00:02:16.625
But again, the first one I want you to look at is owner of function,

00:02:16.625 --> 00:02:18.159
what they're doing in this function.

00:02:18.159 --> 00:02:20.039
If you see all it's doing is that,

00:02:20.039 --> 00:02:22.459
it's taking in the token ID of the token to query,

00:02:22.460 --> 00:02:25.310
the owner up and returns the token address and

00:02:25.310 --> 00:02:28.985
returns the address of whoever currently is the owner of that token.

00:02:28.985 --> 00:02:32.720
So, that's that. Another function I want you to look at is a mint function.

00:02:32.719 --> 00:02:34.745
So, let's go find the mint function.

00:02:34.745 --> 00:02:36.754
So, that's the mint function right there.

00:02:36.754 --> 00:02:39.199
So, this is used to create new tokens.

00:02:39.199 --> 00:02:40.909
It is taking in two parameters,

00:02:40.909 --> 00:02:44.590
address of the newly minted tokens and the token ID.

00:02:44.590 --> 00:02:47.284
It also checks to see if the address isn't

00:02:47.284 --> 00:02:50.784
a zero address and then it calls the add token function.

00:02:50.784 --> 00:02:52.930
So, that's what it's doing in this function mint.

00:02:52.930 --> 00:02:55.175
That means you're creating new tokens and

00:02:55.175 --> 00:02:57.710
it's doing some error handling and then it's adding this function.

00:02:57.710 --> 00:02:59.180
Now, let's go find this function,

00:02:59.180 --> 00:03:01.230
see what's happening there.

00:03:01.580 --> 00:03:04.320
This is the addToken function.

00:03:04.319 --> 00:03:06.120
What's happening in addToken again,

00:03:06.120 --> 00:03:07.474
it's taking in two parameters,

00:03:07.474 --> 00:03:11.284
the address that will own the tokens and that unique token ID.

00:03:11.284 --> 00:03:15.759
Now, again I wanted to tell you this as an internal function the way it's implemented.

00:03:15.759 --> 00:03:19.659
What that means is that, you'd likely limit this call to the owner of the contract.

00:03:19.659 --> 00:03:20.875
So, what this is doing,

00:03:20.875 --> 00:03:22.759
is that this function is left internal.

00:03:22.759 --> 00:03:25.810
First of all, I wanted to mention but it's not intended to be called by custom.

00:03:25.810 --> 00:03:27.580
You don't want anyone to call the rights.

00:03:27.580 --> 00:03:30.594
You want to limit it to whoever is calling and that's the reason it's internal.

00:03:30.594 --> 00:03:34.599
So it takes in two parameters and then it further changes the mapping.

00:03:34.599 --> 00:03:37.239
So based upon your adding a token so if you see,

00:03:37.240 --> 00:03:39.415
you're adding a token, add one.

00:03:39.414 --> 00:03:41.889
So, what you're doing is that whoever to the address is,

00:03:41.889 --> 00:03:43.209
you're adding one token.

00:03:43.210 --> 00:03:47.270
Now, I want you to pay attention to this because we will use this in future,

00:03:47.270 --> 00:03:49.280
and I'm going to ask you in one of your projects to

00:03:49.280 --> 00:03:51.650
change and mint different number of token,

00:03:51.650 --> 00:03:55.719
but for now we're just minting one a token to this two address.

00:03:55.719 --> 00:03:58.199
Now, also one function I wanted you to look at,

00:03:58.199 --> 00:03:59.519
is the removeToken functions.

00:03:59.520 --> 00:04:01.830
Similarly, just like the addToken function,

00:04:01.830 --> 00:04:03.368
is taking in two parameters,

00:04:03.368 --> 00:04:04.895
also an internal function.

00:04:04.895 --> 00:04:08.540
The from is of course the address of the previous owner of the given token ID and

00:04:08.539 --> 00:04:12.560
the token ID is of course the token ID that you wanted removed from whatever.

00:04:12.560 --> 00:04:14.719
First of all, the first thing it checks is that,

00:04:14.719 --> 00:04:17.735
whoever is calling is the right owner of this token,

00:04:17.735 --> 00:04:20.655
and then it's changing the mappings accordingly.

00:04:20.654 --> 00:04:23.259
Also, what it's doing and once it removes token,

00:04:23.259 --> 00:04:24.920
it's also setting this to zero,

00:04:24.920 --> 00:04:27.500
so that in future if you're doing any error handling,

00:04:27.500 --> 00:04:31.399
you will get back at zero to making sure that this address does not own this token.

00:04:31.399 --> 00:04:32.734
So, we're just doing some stuff here.

00:04:32.735 --> 00:04:34.824
So we have addToken, removeToken.

00:04:34.824 --> 00:04:36.769
We looked at the mint token function.

00:04:36.769 --> 00:04:38.209
This is how it implements.

00:04:38.209 --> 00:04:42.049
So, now what we're going to do is start importing these files into our contracts,

00:04:42.050 --> 00:04:44.375
so we can personally make our contract or

00:04:44.375 --> 00:04:49.040
our starNotary version two ERC 721 standard token.

