WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.060
Welcome back. We are finally ready to test our code using

00:00:03.060 --> 00:00:07.095
the Remix Editor for a LemonadeStand supply chain smart contract.

00:00:07.095 --> 00:00:08.925
From the Compile tab,

00:00:08.925 --> 00:00:11.895
make sure you have Auto compile selected.

00:00:11.895 --> 00:00:14.250
Right there. So, that's Auto compile.

00:00:14.250 --> 00:00:16.125
Make sure your contract is compile,

00:00:16.125 --> 00:00:19.800
and then you're going to run on to the next tab which is the Run tab,

00:00:19.800 --> 00:00:24.540
and you're going to make sure that the environment is selected to JavaScript VM.

00:00:24.540 --> 00:00:28.515
That's the inbuilt ethereum local network that comes along,

00:00:28.515 --> 00:00:30.120
that's called the JavaScript VM.

00:00:30.120 --> 00:00:31.890
So, you're going to select this one and then

00:00:31.890 --> 00:00:34.425
finally you're going to click on Deploy, right there.

00:00:34.425 --> 00:00:37.370
So, when you click on Deploy if this worked fine,

00:00:37.370 --> 00:00:39.170
you should see LemonadeStand show up as

00:00:39.170 --> 00:00:44.255
a deployed contract and click on the down arrow to see what functions are available.

00:00:44.255 --> 00:00:49.120
So, we have three functions here: addItem, buyItem, and fetchItem.

00:00:49.120 --> 00:00:52.155
So, I'm going to start with the very first one, let's add an item.

00:00:52.155 --> 00:00:54.495
So, let's say I want to add an item,

00:00:54.495 --> 00:00:56.595
just pick one, I'm going to add a phone.

00:00:56.595 --> 00:00:59.700
I'm going to give it a price of 100.

00:00:59.700 --> 00:01:03.000
Fantastic. So, let's go add an item.

00:01:03.000 --> 00:01:04.995
Now if everything went fine,

00:01:04.995 --> 00:01:08.490
now one thing I wanted to mention is accepting adjacent representation,

00:01:08.490 --> 00:01:09.740
that's a reason every time you give

00:01:09.740 --> 00:01:13.470
strings in remakes you're supposed to put them in codes.

00:01:13.470 --> 00:01:15.600
So, I put my information phone in

00:01:15.600 --> 00:01:19.220
code comma and then the second argument which is the price.

00:01:19.220 --> 00:01:20.660
So, I'm creating an addItem.

00:01:20.660 --> 00:01:23.255
Remember addItem accepting two arguments, right there.

00:01:23.255 --> 00:01:24.620
So, I passed on my two arguments.

00:01:24.620 --> 00:01:27.230
Now, you can always see the details of this contracts.

00:01:27.230 --> 00:01:29.900
You're going to go look at this details,

00:01:29.900 --> 00:01:34.760
you will see that this was added and so you've got a skuCount of one.

00:01:34.760 --> 00:01:38.150
It also had all the information came along, fantastic.

00:01:38.150 --> 00:01:40.050
So and now moving on,

00:01:40.050 --> 00:01:41.525
so we've already added our item.

00:01:41.525 --> 00:01:44.450
So now, we can actually go and fetch our item. So, let's go.

00:01:44.450 --> 00:01:46.745
So, the remember this skuCount starts with one.

00:01:46.745 --> 00:01:48.515
So, I'm going to go fetch my item one.

00:01:48.515 --> 00:01:52.945
So, let's enter one right there and let's go fetchItem.

00:01:52.945 --> 00:01:55.680
So, once you fetch an item,

00:01:55.680 --> 00:01:57.450
scrolling, right over there.

00:01:57.450 --> 00:02:00.345
You'll see you got your string name phone,

00:02:00.345 --> 00:02:03.200
sku is one, prices set, the sale,

00:02:03.200 --> 00:02:08.420
the address of the seller is this address which is coming from this address,

00:02:08.420 --> 00:02:12.490
and the buyer is initially set to zero because we don't have a buyer yet.

00:02:12.490 --> 00:02:15.270
Fantastic. So, we are now set.

00:02:15.270 --> 00:02:16.940
We have actually added one item.

00:02:16.940 --> 00:02:18.230
We have fetched the items.

00:02:18.230 --> 00:02:20.210
We can do all these things, fantastic.

00:02:20.210 --> 00:02:23.990
Now, let's add on and see if you can buy an item.

00:02:23.990 --> 00:02:25.805
So, what I'm going to do is,

00:02:25.805 --> 00:02:27.845
I'm actually going to supply,

00:02:27.845 --> 00:02:29.900
let's say you want to sku numbers,

00:02:29.900 --> 00:02:31.565
I'm going to say I want to buy item one.

00:02:31.565 --> 00:02:33.710
Also, I'm going to go select a different address.

00:02:33.710 --> 00:02:36.590
So, let's go select an address the second one from the top.

00:02:36.590 --> 00:02:41.150
So, we're buying from this special address and then I'm going to go click on buyItem.

00:02:41.150 --> 00:02:42.920
If everything went fine,

00:02:42.920 --> 00:02:46.640
you're going to look on the terminal window and in fact, I wanted to show you this.

00:02:46.640 --> 00:02:48.320
Remember this is a payable function?

00:02:48.320 --> 00:02:51.290
Since I did not send any value, it's going to throw an error.

00:02:51.290 --> 00:02:55.490
So, I need to send at least a 100 wei.

00:02:55.490 --> 00:02:58.735
So now, let's go click on the buyItem function again.

00:02:58.735 --> 00:02:59.895
Now, it goes through.

00:02:59.895 --> 00:03:02.780
So, payable functions expecting in value.

00:03:02.780 --> 00:03:05.405
So, remember this modifier that says, "Paid enough?"

00:03:05.405 --> 00:03:07.145
It's going to revert back saying,

00:03:07.145 --> 00:03:09.455
"I send zero, it's expecting at least 100."

00:03:09.455 --> 00:03:11.455
So that's the reason we got an error right there.

00:03:11.455 --> 00:03:12.945
So, that was revert.

00:03:12.945 --> 00:03:14.190
So, I wanted to show you that.

00:03:14.190 --> 00:03:18.705
So now, since I sent a 100 wei and it's expecting at least 100 wei went through.

00:03:18.705 --> 00:03:21.015
So now, we've bought the item.

00:03:21.015 --> 00:03:25.590
Now, let's go fetch the item again one and see what it comes.

00:03:25.590 --> 00:03:30.420
So, let's look at this window right there and you will see all the information.

00:03:30.420 --> 00:03:33.525
So, you will see the fetched item phone,

00:03:33.525 --> 00:03:36.470
sku, now, the seller is of course this much.

00:03:36.470 --> 00:03:40.175
Now, remember when initially fetched the item before we bought it?

00:03:40.175 --> 00:03:41.270
It was zero address,

00:03:41.270 --> 00:03:43.460
now it's set to this address from the top.

00:03:43.460 --> 00:03:44.795
So, fantastic.

00:03:44.795 --> 00:03:47.525
So, everything is working in our values over here.

00:03:47.525 --> 00:03:49.380
We've been able to fetch items,

00:03:49.380 --> 00:03:51.675
we can buy items, and great.

00:03:51.675 --> 00:03:53.420
So, now that's it. Everything is working.

00:03:53.420 --> 00:03:55.310
So, finally successfully coded up

00:03:55.310 --> 00:03:58.370
your first supply chain smart contract, congratulations.

00:03:58.370 --> 00:04:00.890
Coming up, I'm going to give you some tasks to

00:04:00.890 --> 00:04:03.840
add more functionality to this smart contract.

